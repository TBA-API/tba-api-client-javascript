/**
 * The Blue Alliance API v3
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).    A `User-Agent` header may need to be set to prevent a 403 Unauthorized error.
 *
 * OpenAPI spec version: 3.04.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import APIStatus from '../model/APIStatus';

/**
* TBA service.
* @module api/TBAApi
* @version 3.04.1
*/
export default class TBAApi {

    /**
    * Constructs a new TBAApi. 
    * @alias module:api/TBAApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getStatus operation.
     * @callback module:api/TBAApi~getStatusCallback
     * @param {String} error Error message, if any.
     * @param {module:model/APIStatus} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns API status, and TBA status information.
     * @param {Object} opts Optional parameters
     * @param {String} opts.ifModifiedSince Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client.
     * @param {module:api/TBAApi~getStatusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/APIStatus}
     */
    getStatus(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'If-Modified-Since': opts['ifModifiedSince']
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = APIStatus;
      return this.apiClient.callApi(
        '/status', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
