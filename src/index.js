/**
 * The Blue Alliance API v3
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).    A `User-Agent` header may need to be set to prevent a 403 Unauthorized error.
 *
 * OpenAPI spec version: 3.03.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/APIStatus', 'model/APIStatusAppVersion', 'model/Award', 'model/AwardRecipient', 'model/DistrictList', 'model/DistrictRanking', 'model/DistrictRankingEventPoints', 'model/EliminationAlliance', 'model/EliminationAllianceBackup', 'model/EliminationAllianceStatus', 'model/Event', 'model/EventDistrictPoints', 'model/EventDistrictPointsPoints', 'model/EventDistrictPointsTiebreakers', 'model/EventInsights', 'model/EventInsights2016', 'model/EventInsights2017', 'model/EventInsights2018', 'model/EventOPRs', 'model/EventPredictions', 'model/EventRanking', 'model/EventRankingExtraStatsInfo', 'model/EventRankingRankings', 'model/EventRankingSortOrderInfo', 'model/EventSimple', 'model/Match', 'model/MatchAlliance', 'model/MatchScoreBreakdown2015', 'model/MatchScoreBreakdown2015Alliance', 'model/MatchScoreBreakdown2016', 'model/MatchScoreBreakdown2016Alliance', 'model/MatchScoreBreakdown2017', 'model/MatchScoreBreakdown2017Alliance', 'model/MatchScoreBreakdown2018', 'model/MatchScoreBreakdown2018Alliance', 'model/MatchSimple', 'model/MatchSimpleAlliances', 'model/MatchTimeseries2018', 'model/MatchVideos', 'model/Media', 'model/Team', 'model/TeamEventStatus', 'model/TeamEventStatusAlliance', 'model/TeamEventStatusAllianceBackup', 'model/TeamEventStatusPlayoff', 'model/TeamEventStatusRank', 'model/TeamEventStatusRankRanking', 'model/TeamEventStatusRankSortOrderInfo', 'model/TeamRobot', 'model/TeamSimple', 'model/WLTRecord', 'model/Webcast', 'api/DistrictApi', 'api/EventApi', 'api/ListApi', 'api/MatchApi', 'api/TBAApi', 'api/TeamApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/APIStatus'), require('./model/APIStatusAppVersion'), require('./model/Award'), require('./model/AwardRecipient'), require('./model/DistrictList'), require('./model/DistrictRanking'), require('./model/DistrictRankingEventPoints'), require('./model/EliminationAlliance'), require('./model/EliminationAllianceBackup'), require('./model/EliminationAllianceStatus'), require('./model/Event'), require('./model/EventDistrictPoints'), require('./model/EventDistrictPointsPoints'), require('./model/EventDistrictPointsTiebreakers'), require('./model/EventInsights'), require('./model/EventInsights2016'), require('./model/EventInsights2017'), require('./model/EventInsights2018'), require('./model/EventOPRs'), require('./model/EventPredictions'), require('./model/EventRanking'), require('./model/EventRankingExtraStatsInfo'), require('./model/EventRankingRankings'), require('./model/EventRankingSortOrderInfo'), require('./model/EventSimple'), require('./model/Match'), require('./model/MatchAlliance'), require('./model/MatchScoreBreakdown2015'), require('./model/MatchScoreBreakdown2015Alliance'), require('./model/MatchScoreBreakdown2016'), require('./model/MatchScoreBreakdown2016Alliance'), require('./model/MatchScoreBreakdown2017'), require('./model/MatchScoreBreakdown2017Alliance'), require('./model/MatchScoreBreakdown2018'), require('./model/MatchScoreBreakdown2018Alliance'), require('./model/MatchSimple'), require('./model/MatchSimpleAlliances'), require('./model/MatchTimeseries2018'), require('./model/MatchVideos'), require('./model/Media'), require('./model/Team'), require('./model/TeamEventStatus'), require('./model/TeamEventStatusAlliance'), require('./model/TeamEventStatusAllianceBackup'), require('./model/TeamEventStatusPlayoff'), require('./model/TeamEventStatusRank'), require('./model/TeamEventStatusRankRanking'), require('./model/TeamEventStatusRankSortOrderInfo'), require('./model/TeamRobot'), require('./model/TeamSimple'), require('./model/WLTRecord'), require('./model/Webcast'), require('./api/DistrictApi'), require('./api/EventApi'), require('./api/ListApi'), require('./api/MatchApi'), require('./api/TBAApi'), require('./api/TeamApi'));
  }
}(function(ApiClient, APIStatus, APIStatusAppVersion, Award, AwardRecipient, DistrictList, DistrictRanking, DistrictRankingEventPoints, EliminationAlliance, EliminationAllianceBackup, EliminationAllianceStatus, Event, EventDistrictPoints, EventDistrictPointsPoints, EventDistrictPointsTiebreakers, EventInsights, EventInsights2016, EventInsights2017, EventInsights2018, EventOPRs, EventPredictions, EventRanking, EventRankingExtraStatsInfo, EventRankingRankings, EventRankingSortOrderInfo, EventSimple, Match, MatchAlliance, MatchScoreBreakdown2015, MatchScoreBreakdown2015Alliance, MatchScoreBreakdown2016, MatchScoreBreakdown2016Alliance, MatchScoreBreakdown2017, MatchScoreBreakdown2017Alliance, MatchScoreBreakdown2018, MatchScoreBreakdown2018Alliance, MatchSimple, MatchSimpleAlliances, MatchTimeseries2018, MatchVideos, Media, Team, TeamEventStatus, TeamEventStatusAlliance, TeamEventStatusAllianceBackup, TeamEventStatusPlayoff, TeamEventStatusRank, TeamEventStatusRankRanking, TeamEventStatusRankSortOrderInfo, TeamRobot, TeamSimple, WLTRecord, Webcast, DistrictApi, EventApi, ListApi, MatchApi, TBAApi, TeamApi) {
  'use strict';

  /**
   * _Overview__Information_and_statistics_about_FIRST_Robotics_Competition_teams_and_events___Authentication_All_endpoints_require_an_Auth_Key_to_be_passed_in_the_header_X_TBA_Auth_Key__If_you_do_not_have_an_auth_key_yet_you_can_obtain_one_from_your__Account_Page_account___A_User_Agent_header_may_need_to_be_set_to_prevent_a_403_Unauthorized_error_.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var TbaApiV3client = require('index'); // See note below*.
   * var xxxSvc = new TbaApiV3client.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new TbaApiV3client.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new TbaApiV3client.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new TbaApiV3client.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 3.03.1
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The APIStatus model constructor.
     * @property {module:model/APIStatus}
     */
    APIStatus: APIStatus,
    /**
     * The APIStatusAppVersion model constructor.
     * @property {module:model/APIStatusAppVersion}
     */
    APIStatusAppVersion: APIStatusAppVersion,
    /**
     * The Award model constructor.
     * @property {module:model/Award}
     */
    Award: Award,
    /**
     * The AwardRecipient model constructor.
     * @property {module:model/AwardRecipient}
     */
    AwardRecipient: AwardRecipient,
    /**
     * The DistrictList model constructor.
     * @property {module:model/DistrictList}
     */
    DistrictList: DistrictList,
    /**
     * The DistrictRanking model constructor.
     * @property {module:model/DistrictRanking}
     */
    DistrictRanking: DistrictRanking,
    /**
     * The DistrictRankingEventPoints model constructor.
     * @property {module:model/DistrictRankingEventPoints}
     */
    DistrictRankingEventPoints: DistrictRankingEventPoints,
    /**
     * The EliminationAlliance model constructor.
     * @property {module:model/EliminationAlliance}
     */
    EliminationAlliance: EliminationAlliance,
    /**
     * The EliminationAllianceBackup model constructor.
     * @property {module:model/EliminationAllianceBackup}
     */
    EliminationAllianceBackup: EliminationAllianceBackup,
    /**
     * The EliminationAllianceStatus model constructor.
     * @property {module:model/EliminationAllianceStatus}
     */
    EliminationAllianceStatus: EliminationAllianceStatus,
    /**
     * The Event model constructor.
     * @property {module:model/Event}
     */
    Event: Event,
    /**
     * The EventDistrictPoints model constructor.
     * @property {module:model/EventDistrictPoints}
     */
    EventDistrictPoints: EventDistrictPoints,
    /**
     * The EventDistrictPointsPoints model constructor.
     * @property {module:model/EventDistrictPointsPoints}
     */
    EventDistrictPointsPoints: EventDistrictPointsPoints,
    /**
     * The EventDistrictPointsTiebreakers model constructor.
     * @property {module:model/EventDistrictPointsTiebreakers}
     */
    EventDistrictPointsTiebreakers: EventDistrictPointsTiebreakers,
    /**
     * The EventInsights model constructor.
     * @property {module:model/EventInsights}
     */
    EventInsights: EventInsights,
    /**
     * The EventInsights2016 model constructor.
     * @property {module:model/EventInsights2016}
     */
    EventInsights2016: EventInsights2016,
    /**
     * The EventInsights2017 model constructor.
     * @property {module:model/EventInsights2017}
     */
    EventInsights2017: EventInsights2017,
    /**
     * The EventInsights2018 model constructor.
     * @property {module:model/EventInsights2018}
     */
    EventInsights2018: EventInsights2018,
    /**
     * The EventOPRs model constructor.
     * @property {module:model/EventOPRs}
     */
    EventOPRs: EventOPRs,
    /**
     * The EventPredictions model constructor.
     * @property {module:model/EventPredictions}
     */
    EventPredictions: EventPredictions,
    /**
     * The EventRanking model constructor.
     * @property {module:model/EventRanking}
     */
    EventRanking: EventRanking,
    /**
     * The EventRankingExtraStatsInfo model constructor.
     * @property {module:model/EventRankingExtraStatsInfo}
     */
    EventRankingExtraStatsInfo: EventRankingExtraStatsInfo,
    /**
     * The EventRankingRankings model constructor.
     * @property {module:model/EventRankingRankings}
     */
    EventRankingRankings: EventRankingRankings,
    /**
     * The EventRankingSortOrderInfo model constructor.
     * @property {module:model/EventRankingSortOrderInfo}
     */
    EventRankingSortOrderInfo: EventRankingSortOrderInfo,
    /**
     * The EventSimple model constructor.
     * @property {module:model/EventSimple}
     */
    EventSimple: EventSimple,
    /**
     * The Match model constructor.
     * @property {module:model/Match}
     */
    Match: Match,
    /**
     * The MatchAlliance model constructor.
     * @property {module:model/MatchAlliance}
     */
    MatchAlliance: MatchAlliance,
    /**
     * The MatchScoreBreakdown2015 model constructor.
     * @property {module:model/MatchScoreBreakdown2015}
     */
    MatchScoreBreakdown2015: MatchScoreBreakdown2015,
    /**
     * The MatchScoreBreakdown2015Alliance model constructor.
     * @property {module:model/MatchScoreBreakdown2015Alliance}
     */
    MatchScoreBreakdown2015Alliance: MatchScoreBreakdown2015Alliance,
    /**
     * The MatchScoreBreakdown2016 model constructor.
     * @property {module:model/MatchScoreBreakdown2016}
     */
    MatchScoreBreakdown2016: MatchScoreBreakdown2016,
    /**
     * The MatchScoreBreakdown2016Alliance model constructor.
     * @property {module:model/MatchScoreBreakdown2016Alliance}
     */
    MatchScoreBreakdown2016Alliance: MatchScoreBreakdown2016Alliance,
    /**
     * The MatchScoreBreakdown2017 model constructor.
     * @property {module:model/MatchScoreBreakdown2017}
     */
    MatchScoreBreakdown2017: MatchScoreBreakdown2017,
    /**
     * The MatchScoreBreakdown2017Alliance model constructor.
     * @property {module:model/MatchScoreBreakdown2017Alliance}
     */
    MatchScoreBreakdown2017Alliance: MatchScoreBreakdown2017Alliance,
    /**
     * The MatchScoreBreakdown2018 model constructor.
     * @property {module:model/MatchScoreBreakdown2018}
     */
    MatchScoreBreakdown2018: MatchScoreBreakdown2018,
    /**
     * The MatchScoreBreakdown2018Alliance model constructor.
     * @property {module:model/MatchScoreBreakdown2018Alliance}
     */
    MatchScoreBreakdown2018Alliance: MatchScoreBreakdown2018Alliance,
    /**
     * The MatchSimple model constructor.
     * @property {module:model/MatchSimple}
     */
    MatchSimple: MatchSimple,
    /**
     * The MatchSimpleAlliances model constructor.
     * @property {module:model/MatchSimpleAlliances}
     */
    MatchSimpleAlliances: MatchSimpleAlliances,
    /**
     * The MatchTimeseries2018 model constructor.
     * @property {module:model/MatchTimeseries2018}
     */
    MatchTimeseries2018: MatchTimeseries2018,
    /**
     * The MatchVideos model constructor.
     * @property {module:model/MatchVideos}
     */
    MatchVideos: MatchVideos,
    /**
     * The Media model constructor.
     * @property {module:model/Media}
     */
    Media: Media,
    /**
     * The Team model constructor.
     * @property {module:model/Team}
     */
    Team: Team,
    /**
     * The TeamEventStatus model constructor.
     * @property {module:model/TeamEventStatus}
     */
    TeamEventStatus: TeamEventStatus,
    /**
     * The TeamEventStatusAlliance model constructor.
     * @property {module:model/TeamEventStatusAlliance}
     */
    TeamEventStatusAlliance: TeamEventStatusAlliance,
    /**
     * The TeamEventStatusAllianceBackup model constructor.
     * @property {module:model/TeamEventStatusAllianceBackup}
     */
    TeamEventStatusAllianceBackup: TeamEventStatusAllianceBackup,
    /**
     * The TeamEventStatusPlayoff model constructor.
     * @property {module:model/TeamEventStatusPlayoff}
     */
    TeamEventStatusPlayoff: TeamEventStatusPlayoff,
    /**
     * The TeamEventStatusRank model constructor.
     * @property {module:model/TeamEventStatusRank}
     */
    TeamEventStatusRank: TeamEventStatusRank,
    /**
     * The TeamEventStatusRankRanking model constructor.
     * @property {module:model/TeamEventStatusRankRanking}
     */
    TeamEventStatusRankRanking: TeamEventStatusRankRanking,
    /**
     * The TeamEventStatusRankSortOrderInfo model constructor.
     * @property {module:model/TeamEventStatusRankSortOrderInfo}
     */
    TeamEventStatusRankSortOrderInfo: TeamEventStatusRankSortOrderInfo,
    /**
     * The TeamRobot model constructor.
     * @property {module:model/TeamRobot}
     */
    TeamRobot: TeamRobot,
    /**
     * The TeamSimple model constructor.
     * @property {module:model/TeamSimple}
     */
    TeamSimple: TeamSimple,
    /**
     * The WLTRecord model constructor.
     * @property {module:model/WLTRecord}
     */
    WLTRecord: WLTRecord,
    /**
     * The Webcast model constructor.
     * @property {module:model/Webcast}
     */
    Webcast: Webcast,
    /**
     * The DistrictApi service constructor.
     * @property {module:api/DistrictApi}
     */
    DistrictApi: DistrictApi,
    /**
     * The EventApi service constructor.
     * @property {module:api/EventApi}
     */
    EventApi: EventApi,
    /**
     * The ListApi service constructor.
     * @property {module:api/ListApi}
     */
    ListApi: ListApi,
    /**
     * The MatchApi service constructor.
     * @property {module:api/MatchApi}
     */
    MatchApi: MatchApi,
    /**
     * The TBAApi service constructor.
     * @property {module:api/TBAApi}
     */
    TBAApi: TBAApi,
    /**
     * The TeamApi service constructor.
     * @property {module:api/TeamApi}
     */
    TeamApi: TeamApi
  };

  return exports;
}));
