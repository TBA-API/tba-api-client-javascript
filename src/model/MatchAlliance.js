/**
 * The Blue Alliance API v3
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).    A `User-Agent` header may need to be set to prevent a 403 Unauthorized error.
 *
 * OpenAPI spec version: 3.03.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.TbaApiV3client) {
      root.TbaApiV3client = {};
    }
    root.TbaApiV3client.MatchAlliance = factory(root.TbaApiV3client.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The MatchAlliance model module.
   * @module model/MatchAlliance
   * @version 3.03.1
   */

  /**
   * Constructs a new <code>MatchAlliance</code>.
   * @alias module:model/MatchAlliance
   * @class
   * @param score {Number} Score for this alliance. Will be null or -1 for an unplayed match.
   * @param teamKeys {Array.<String>} 
   */
  var exports = function(score, teamKeys) {
    var _this = this;

    _this['score'] = score;
    _this['team_keys'] = teamKeys;


  };

  /**
   * Constructs a <code>MatchAlliance</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/MatchAlliance} obj Optional instance to populate.
   * @return {module:model/MatchAlliance} The populated <code>MatchAlliance</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('score')) {
        obj['score'] = ApiClient.convertToType(data['score'], 'Number');
      }
      if (data.hasOwnProperty('team_keys')) {
        obj['team_keys'] = ApiClient.convertToType(data['team_keys'], ['String']);
      }
      if (data.hasOwnProperty('surrogate_team_keys')) {
        obj['surrogate_team_keys'] = ApiClient.convertToType(data['surrogate_team_keys'], ['String']);
      }
      if (data.hasOwnProperty('dq_team_keys')) {
        obj['dq_team_keys'] = ApiClient.convertToType(data['dq_team_keys'], ['String']);
      }
    }
    return obj;
  }

  /**
   * Score for this alliance. Will be null or -1 for an unplayed match.
   * @member {Number} score
   */
  exports.prototype['score'] = undefined;
  /**
   * @member {Array.<String>} team_keys
   */
  exports.prototype['team_keys'] = undefined;
  /**
   * TBA team keys (eg `frc254`) of any teams playing as a surrogate.
   * @member {Array.<String>} surrogate_team_keys
   */
  exports.prototype['surrogate_team_keys'] = undefined;
  /**
   * TBA team keys (eg `frc254`) of any disqualified teams.
   * @member {Array.<String>} dq_team_keys
   */
  exports.prototype['dq_team_keys'] = undefined;



  return exports;
}));


