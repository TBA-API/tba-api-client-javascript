/**
 * The Blue Alliance API v3
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).    A `User-Agent` header may need to be set to prevent a 403 Unauthorized error.
 *
 * The version of the OpenAPI document: 3.8.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EventRankingExtraStatsInfo from './EventRankingExtraStatsInfo';
import EventRankingRankings from './EventRankingRankings';
import EventRankingSortOrderInfo from './EventRankingSortOrderInfo';

/**
 * The EventRanking model module.
 * @module model/EventRanking
 * @version 3.8.0
 */
class EventRanking {
    /**
     * Constructs a new <code>EventRanking</code>.
     * @alias module:model/EventRanking
     * @param rankings {Array.<module:model/EventRankingRankings>} List of rankings at the event.
     * @param sortOrderInfo {Array.<module:model/EventRankingSortOrderInfo>} List of year-specific values provided in the `sort_orders` array for each team.
     */
    constructor(rankings, sortOrderInfo) { 
        
        EventRanking.initialize(this, rankings, sortOrderInfo);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, rankings, sortOrderInfo) { 
        obj['rankings'] = rankings;
        obj['sort_order_info'] = sortOrderInfo;
    }

    /**
     * Constructs a <code>EventRanking</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EventRanking} obj Optional instance to populate.
     * @return {module:model/EventRanking} The populated <code>EventRanking</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EventRanking();

            if (data.hasOwnProperty('rankings')) {
                obj['rankings'] = ApiClient.convertToType(data['rankings'], [EventRankingRankings]);
            }
            if (data.hasOwnProperty('extra_stats_info')) {
                obj['extra_stats_info'] = ApiClient.convertToType(data['extra_stats_info'], [EventRankingExtraStatsInfo]);
            }
            if (data.hasOwnProperty('sort_order_info')) {
                obj['sort_order_info'] = ApiClient.convertToType(data['sort_order_info'], [EventRankingSortOrderInfo]);
            }
        }
        return obj;
    }


}

/**
 * List of rankings at the event.
 * @member {Array.<module:model/EventRankingRankings>} rankings
 */
EventRanking.prototype['rankings'] = undefined;

/**
 * List of special TBA-generated values provided in the `extra_stats` array for each item.
 * @member {Array.<module:model/EventRankingExtraStatsInfo>} extra_stats_info
 */
EventRanking.prototype['extra_stats_info'] = undefined;

/**
 * List of year-specific values provided in the `sort_orders` array for each team.
 * @member {Array.<module:model/EventRankingSortOrderInfo>} sort_order_info
 */
EventRanking.prototype['sort_order_info'] = undefined;






export default EventRanking;

