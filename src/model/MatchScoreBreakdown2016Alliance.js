/**
 * The Blue Alliance API v3
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).    A `User-Agent` header may need to be set to prevent a 403 Unauthorized error.
 *
 * OpenAPI spec version: 3.03.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.TbaApiV3client) {
      root.TbaApiV3client = {};
    }
    root.TbaApiV3client.MatchScoreBreakdown2016Alliance = factory(root.TbaApiV3client.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The MatchScoreBreakdown2016Alliance model module.
   * @module model/MatchScoreBreakdown2016Alliance
   * @version 3.03.1
   */

  /**
   * Constructs a new <code>MatchScoreBreakdown2016Alliance</code>.
   * @alias module:model/MatchScoreBreakdown2016Alliance
   * @class
   */
  var exports = function() {
    var _this = this;







































  };

  /**
   * Constructs a <code>MatchScoreBreakdown2016Alliance</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/MatchScoreBreakdown2016Alliance} obj Optional instance to populate.
   * @return {module:model/MatchScoreBreakdown2016Alliance} The populated <code>MatchScoreBreakdown2016Alliance</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('autoPoints')) {
        obj['autoPoints'] = ApiClient.convertToType(data['autoPoints'], 'Number');
      }
      if (data.hasOwnProperty('teleopPoints')) {
        obj['teleopPoints'] = ApiClient.convertToType(data['teleopPoints'], 'Number');
      }
      if (data.hasOwnProperty('breachPoints')) {
        obj['breachPoints'] = ApiClient.convertToType(data['breachPoints'], 'Number');
      }
      if (data.hasOwnProperty('foulPoints')) {
        obj['foulPoints'] = ApiClient.convertToType(data['foulPoints'], 'Number');
      }
      if (data.hasOwnProperty('capturePoints')) {
        obj['capturePoints'] = ApiClient.convertToType(data['capturePoints'], 'Number');
      }
      if (data.hasOwnProperty('adjustPoints')) {
        obj['adjustPoints'] = ApiClient.convertToType(data['adjustPoints'], 'Number');
      }
      if (data.hasOwnProperty('totalPoints')) {
        obj['totalPoints'] = ApiClient.convertToType(data['totalPoints'], 'Number');
      }
      if (data.hasOwnProperty('robot1Auto')) {
        obj['robot1Auto'] = ApiClient.convertToType(data['robot1Auto'], 'String');
      }
      if (data.hasOwnProperty('robot2Auto')) {
        obj['robot2Auto'] = ApiClient.convertToType(data['robot2Auto'], 'String');
      }
      if (data.hasOwnProperty('robot3Auto')) {
        obj['robot3Auto'] = ApiClient.convertToType(data['robot3Auto'], 'String');
      }
      if (data.hasOwnProperty('autoReachPoints')) {
        obj['autoReachPoints'] = ApiClient.convertToType(data['autoReachPoints'], 'Number');
      }
      if (data.hasOwnProperty('autoCrossingPoints')) {
        obj['autoCrossingPoints'] = ApiClient.convertToType(data['autoCrossingPoints'], 'Number');
      }
      if (data.hasOwnProperty('autoBouldersLow')) {
        obj['autoBouldersLow'] = ApiClient.convertToType(data['autoBouldersLow'], 'Number');
      }
      if (data.hasOwnProperty('autoBouldersHigh')) {
        obj['autoBouldersHigh'] = ApiClient.convertToType(data['autoBouldersHigh'], 'Number');
      }
      if (data.hasOwnProperty('autoBoulderPoints')) {
        obj['autoBoulderPoints'] = ApiClient.convertToType(data['autoBoulderPoints'], 'Number');
      }
      if (data.hasOwnProperty('teleopCrossingPoints')) {
        obj['teleopCrossingPoints'] = ApiClient.convertToType(data['teleopCrossingPoints'], 'Number');
      }
      if (data.hasOwnProperty('teleopBouldersLow')) {
        obj['teleopBouldersLow'] = ApiClient.convertToType(data['teleopBouldersLow'], 'Number');
      }
      if (data.hasOwnProperty('teleopBouldersHigh')) {
        obj['teleopBouldersHigh'] = ApiClient.convertToType(data['teleopBouldersHigh'], 'Number');
      }
      if (data.hasOwnProperty('teleopBoulderPoints')) {
        obj['teleopBoulderPoints'] = ApiClient.convertToType(data['teleopBoulderPoints'], 'Number');
      }
      if (data.hasOwnProperty('teleopDefensesBreached')) {
        obj['teleopDefensesBreached'] = ApiClient.convertToType(data['teleopDefensesBreached'], 'Boolean');
      }
      if (data.hasOwnProperty('teleopChallengePoints')) {
        obj['teleopChallengePoints'] = ApiClient.convertToType(data['teleopChallengePoints'], 'Number');
      }
      if (data.hasOwnProperty('teleopScalePoints')) {
        obj['teleopScalePoints'] = ApiClient.convertToType(data['teleopScalePoints'], 'Number');
      }
      if (data.hasOwnProperty('teleopTowerCaptured')) {
        obj['teleopTowerCaptured'] = ApiClient.convertToType(data['teleopTowerCaptured'], 'Number');
      }
      if (data.hasOwnProperty('towerFaceA')) {
        obj['towerFaceA'] = ApiClient.convertToType(data['towerFaceA'], 'String');
      }
      if (data.hasOwnProperty('towerFaceB')) {
        obj['towerFaceB'] = ApiClient.convertToType(data['towerFaceB'], 'String');
      }
      if (data.hasOwnProperty('towerFaceC')) {
        obj['towerFaceC'] = ApiClient.convertToType(data['towerFaceC'], 'String');
      }
      if (data.hasOwnProperty('towerEndStrength')) {
        obj['towerEndStrength'] = ApiClient.convertToType(data['towerEndStrength'], 'Number');
      }
      if (data.hasOwnProperty('techFoulCount')) {
        obj['techFoulCount'] = ApiClient.convertToType(data['techFoulCount'], 'Number');
      }
      if (data.hasOwnProperty('foulCount')) {
        obj['foulCount'] = ApiClient.convertToType(data['foulCount'], 'Number');
      }
      if (data.hasOwnProperty('position2')) {
        obj['position2'] = ApiClient.convertToType(data['position2'], 'String');
      }
      if (data.hasOwnProperty('position3')) {
        obj['position3'] = ApiClient.convertToType(data['position3'], 'String');
      }
      if (data.hasOwnProperty('position4')) {
        obj['position4'] = ApiClient.convertToType(data['position4'], 'String');
      }
      if (data.hasOwnProperty('position5')) {
        obj['position5'] = ApiClient.convertToType(data['position5'], 'String');
      }
      if (data.hasOwnProperty('position1crossings')) {
        obj['position1crossings'] = ApiClient.convertToType(data['position1crossings'], 'Number');
      }
      if (data.hasOwnProperty('position2crossings')) {
        obj['position2crossings'] = ApiClient.convertToType(data['position2crossings'], 'Number');
      }
      if (data.hasOwnProperty('position3crossings')) {
        obj['position3crossings'] = ApiClient.convertToType(data['position3crossings'], 'Number');
      }
      if (data.hasOwnProperty('position4crossings')) {
        obj['position4crossings'] = ApiClient.convertToType(data['position4crossings'], 'Number');
      }
      if (data.hasOwnProperty('position5crossings')) {
        obj['position5crossings'] = ApiClient.convertToType(data['position5crossings'], 'Number');
      }
    }
    return obj;
  }

  /**
   * @member {Number} autoPoints
   */
  exports.prototype['autoPoints'] = undefined;
  /**
   * @member {Number} teleopPoints
   */
  exports.prototype['teleopPoints'] = undefined;
  /**
   * @member {Number} breachPoints
   */
  exports.prototype['breachPoints'] = undefined;
  /**
   * @member {Number} foulPoints
   */
  exports.prototype['foulPoints'] = undefined;
  /**
   * @member {Number} capturePoints
   */
  exports.prototype['capturePoints'] = undefined;
  /**
   * @member {Number} adjustPoints
   */
  exports.prototype['adjustPoints'] = undefined;
  /**
   * @member {Number} totalPoints
   */
  exports.prototype['totalPoints'] = undefined;
  /**
   * @member {module:model/MatchScoreBreakdown2016Alliance.Robot1AutoEnum} robot1Auto
   */
  exports.prototype['robot1Auto'] = undefined;
  /**
   * @member {module:model/MatchScoreBreakdown2016Alliance.Robot2AutoEnum} robot2Auto
   */
  exports.prototype['robot2Auto'] = undefined;
  /**
   * @member {module:model/MatchScoreBreakdown2016Alliance.Robot3AutoEnum} robot3Auto
   */
  exports.prototype['robot3Auto'] = undefined;
  /**
   * @member {Number} autoReachPoints
   */
  exports.prototype['autoReachPoints'] = undefined;
  /**
   * @member {Number} autoCrossingPoints
   */
  exports.prototype['autoCrossingPoints'] = undefined;
  /**
   * @member {Number} autoBouldersLow
   */
  exports.prototype['autoBouldersLow'] = undefined;
  /**
   * @member {Number} autoBouldersHigh
   */
  exports.prototype['autoBouldersHigh'] = undefined;
  /**
   * @member {Number} autoBoulderPoints
   */
  exports.prototype['autoBoulderPoints'] = undefined;
  /**
   * @member {Number} teleopCrossingPoints
   */
  exports.prototype['teleopCrossingPoints'] = undefined;
  /**
   * @member {Number} teleopBouldersLow
   */
  exports.prototype['teleopBouldersLow'] = undefined;
  /**
   * @member {Number} teleopBouldersHigh
   */
  exports.prototype['teleopBouldersHigh'] = undefined;
  /**
   * @member {Number} teleopBoulderPoints
   */
  exports.prototype['teleopBoulderPoints'] = undefined;
  /**
   * @member {Boolean} teleopDefensesBreached
   */
  exports.prototype['teleopDefensesBreached'] = undefined;
  /**
   * @member {Number} teleopChallengePoints
   */
  exports.prototype['teleopChallengePoints'] = undefined;
  /**
   * @member {Number} teleopScalePoints
   */
  exports.prototype['teleopScalePoints'] = undefined;
  /**
   * @member {Number} teleopTowerCaptured
   */
  exports.prototype['teleopTowerCaptured'] = undefined;
  /**
   * @member {String} towerFaceA
   */
  exports.prototype['towerFaceA'] = undefined;
  /**
   * @member {String} towerFaceB
   */
  exports.prototype['towerFaceB'] = undefined;
  /**
   * @member {String} towerFaceC
   */
  exports.prototype['towerFaceC'] = undefined;
  /**
   * @member {Number} towerEndStrength
   */
  exports.prototype['towerEndStrength'] = undefined;
  /**
   * @member {Number} techFoulCount
   */
  exports.prototype['techFoulCount'] = undefined;
  /**
   * @member {Number} foulCount
   */
  exports.prototype['foulCount'] = undefined;
  /**
   * @member {String} position2
   */
  exports.prototype['position2'] = undefined;
  /**
   * @member {String} position3
   */
  exports.prototype['position3'] = undefined;
  /**
   * @member {String} position4
   */
  exports.prototype['position4'] = undefined;
  /**
   * @member {String} position5
   */
  exports.prototype['position5'] = undefined;
  /**
   * @member {Number} position1crossings
   */
  exports.prototype['position1crossings'] = undefined;
  /**
   * @member {Number} position2crossings
   */
  exports.prototype['position2crossings'] = undefined;
  /**
   * @member {Number} position3crossings
   */
  exports.prototype['position3crossings'] = undefined;
  /**
   * @member {Number} position4crossings
   */
  exports.prototype['position4crossings'] = undefined;
  /**
   * @member {Number} position5crossings
   */
  exports.prototype['position5crossings'] = undefined;


  /**
   * Allowed values for the <code>robot1Auto</code> property.
   * @enum {String}
   * @readonly
   */
  exports.Robot1AutoEnum = {
    /**
     * value: "Crossed"
     * @const
     */
    "Crossed": "Crossed",
    /**
     * value: "Reached"
     * @const
     */
    "Reached": "Reached",
    /**
     * value: "None"
     * @const
     */
    "None": "None"  };

  /**
   * Allowed values for the <code>robot2Auto</code> property.
   * @enum {String}
   * @readonly
   */
  exports.Robot2AutoEnum = {
    /**
     * value: "Crossed"
     * @const
     */
    "Crossed": "Crossed",
    /**
     * value: "Reached"
     * @const
     */
    "Reached": "Reached",
    /**
     * value: "None"
     * @const
     */
    "None": "None"  };

  /**
   * Allowed values for the <code>robot3Auto</code> property.
   * @enum {String}
   * @readonly
   */
  exports.Robot3AutoEnum = {
    /**
     * value: "Crossed"
     * @const
     */
    "Crossed": "Crossed",
    /**
     * value: "Reached"
     * @const
     */
    "Reached": "Reached",
    /**
     * value: "None"
     * @const
     */
    "None": "None"  };


  return exports;
}));


