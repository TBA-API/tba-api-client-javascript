//
// ListAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import Alamofire



open class ListAPI {
    /**

     - parameter districtKey: (path) TBA District Key, eg &#x60;2016fim&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getDistrictEvents(districtKey: String, ifModifiedSince: String? = nil, completion: @escaping ((_ data: [Event]?,_ error: Error?) -> Void)) {
        getDistrictEventsWithRequestBuilder(districtKey: districtKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     - GET /district/{district_key}/events
     - Gets a list of events in the given district.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Cache-Control(String), Last-Modified(String)]
     - parameter districtKey: (path) TBA District Key, eg &#x60;2016fim&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - returns: RequestBuilder<[Event]> 
     */
    open class func getDistrictEventsWithRequestBuilder(districtKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<[Event]> {
        var path = "/district/{district_key}/events"
        let districtKeyPreEscape = "\(APIHelper.mapValueToPathItem(districtKey))"
        let districtKeyPostEscape = districtKeyPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{district_key}", with: districtKeyPostEscape, options: .literal, range: nil)
        let URLString = tba-api-v3clientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[Event]>.Type = tba-api-v3clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter districtKey: (path) TBA District Key, eg &#x60;2016fim&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getDistrictEventsKeys(districtKey: String, ifModifiedSince: String? = nil, completion: @escaping ((_ data: [String]?,_ error: Error?) -> Void)) {
        getDistrictEventsKeysWithRequestBuilder(districtKey: districtKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     - GET /district/{district_key}/events/keys
     - Gets a list of event keys for events in the given district.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Cache-Control(String), Last-Modified(String)]
     - parameter districtKey: (path) TBA District Key, eg &#x60;2016fim&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - returns: RequestBuilder<[String]> 
     */
    open class func getDistrictEventsKeysWithRequestBuilder(districtKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<[String]> {
        var path = "/district/{district_key}/events/keys"
        let districtKeyPreEscape = "\(APIHelper.mapValueToPathItem(districtKey))"
        let districtKeyPostEscape = districtKeyPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{district_key}", with: districtKeyPostEscape, options: .literal, range: nil)
        let URLString = tba-api-v3clientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[String]>.Type = tba-api-v3clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter districtKey: (path) TBA District Key, eg &#x60;2016fim&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getDistrictEventsSimple(districtKey: String, ifModifiedSince: String? = nil, completion: @escaping ((_ data: [EventSimple]?,_ error: Error?) -> Void)) {
        getDistrictEventsSimpleWithRequestBuilder(districtKey: districtKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     - GET /district/{district_key}/events/simple
     - Gets a short-form list of events in the given district.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Cache-Control(String), Last-Modified(String)]
     - parameter districtKey: (path) TBA District Key, eg &#x60;2016fim&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - returns: RequestBuilder<[EventSimple]> 
     */
    open class func getDistrictEventsSimpleWithRequestBuilder(districtKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<[EventSimple]> {
        var path = "/district/{district_key}/events/simple"
        let districtKeyPreEscape = "\(APIHelper.mapValueToPathItem(districtKey))"
        let districtKeyPostEscape = districtKeyPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{district_key}", with: districtKeyPostEscape, options: .literal, range: nil)
        let URLString = tba-api-v3clientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[EventSimple]>.Type = tba-api-v3clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter districtKey: (path) TBA District Key, eg &#x60;2016fim&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getDistrictRankings(districtKey: String, ifModifiedSince: String? = nil, completion: @escaping ((_ data: [DistrictRanking]?,_ error: Error?) -> Void)) {
        getDistrictRankingsWithRequestBuilder(districtKey: districtKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     - GET /district/{district_key}/rankings
     - Gets a list of team district rankings for the given district.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Cache-Control(String), Last-Modified(String)]
     - parameter districtKey: (path) TBA District Key, eg &#x60;2016fim&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - returns: RequestBuilder<[DistrictRanking]> 
     */
    open class func getDistrictRankingsWithRequestBuilder(districtKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<[DistrictRanking]> {
        var path = "/district/{district_key}/rankings"
        let districtKeyPreEscape = "\(APIHelper.mapValueToPathItem(districtKey))"
        let districtKeyPostEscape = districtKeyPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{district_key}", with: districtKeyPostEscape, options: .literal, range: nil)
        let URLString = tba-api-v3clientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[DistrictRanking]>.Type = tba-api-v3clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter districtKey: (path) TBA District Key, eg &#x60;2016fim&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getDistrictTeams(districtKey: String, ifModifiedSince: String? = nil, completion: @escaping ((_ data: [Team]?,_ error: Error?) -> Void)) {
        getDistrictTeamsWithRequestBuilder(districtKey: districtKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     - GET /district/{district_key}/teams
     - Gets a list of `Team` objects that competed in events in the given district.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Cache-Control(String), Last-Modified(String)]
     - parameter districtKey: (path) TBA District Key, eg &#x60;2016fim&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - returns: RequestBuilder<[Team]> 
     */
    open class func getDistrictTeamsWithRequestBuilder(districtKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<[Team]> {
        var path = "/district/{district_key}/teams"
        let districtKeyPreEscape = "\(APIHelper.mapValueToPathItem(districtKey))"
        let districtKeyPostEscape = districtKeyPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{district_key}", with: districtKeyPostEscape, options: .literal, range: nil)
        let URLString = tba-api-v3clientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[Team]>.Type = tba-api-v3clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter districtKey: (path) TBA District Key, eg &#x60;2016fim&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getDistrictTeamsKeys(districtKey: String, ifModifiedSince: String? = nil, completion: @escaping ((_ data: [String]?,_ error: Error?) -> Void)) {
        getDistrictTeamsKeysWithRequestBuilder(districtKey: districtKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     - GET /district/{district_key}/teams/keys
     - Gets a list of `Team` objects that competed in events in the given district.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Cache-Control(String), Last-Modified(String)]
     - parameter districtKey: (path) TBA District Key, eg &#x60;2016fim&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - returns: RequestBuilder<[String]> 
     */
    open class func getDistrictTeamsKeysWithRequestBuilder(districtKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<[String]> {
        var path = "/district/{district_key}/teams/keys"
        let districtKeyPreEscape = "\(APIHelper.mapValueToPathItem(districtKey))"
        let districtKeyPostEscape = districtKeyPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{district_key}", with: districtKeyPostEscape, options: .literal, range: nil)
        let URLString = tba-api-v3clientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[String]>.Type = tba-api-v3clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter districtKey: (path) TBA District Key, eg &#x60;2016fim&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getDistrictTeamsSimple(districtKey: String, ifModifiedSince: String? = nil, completion: @escaping ((_ data: [TeamSimple]?,_ error: Error?) -> Void)) {
        getDistrictTeamsSimpleWithRequestBuilder(districtKey: districtKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     - GET /district/{district_key}/teams/simple
     - Gets a short-form list of `Team` objects that competed in events in the given district.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Cache-Control(String), Last-Modified(String)]
     - parameter districtKey: (path) TBA District Key, eg &#x60;2016fim&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - returns: RequestBuilder<[TeamSimple]> 
     */
    open class func getDistrictTeamsSimpleWithRequestBuilder(districtKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<[TeamSimple]> {
        var path = "/district/{district_key}/teams/simple"
        let districtKeyPreEscape = "\(APIHelper.mapValueToPathItem(districtKey))"
        let districtKeyPostEscape = districtKeyPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{district_key}", with: districtKeyPostEscape, options: .literal, range: nil)
        let URLString = tba-api-v3clientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[TeamSimple]>.Type = tba-api-v3clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getEventTeams(eventKey: String, ifModifiedSince: String? = nil, completion: @escaping ((_ data: [Team]?,_ error: Error?) -> Void)) {
        getEventTeamsWithRequestBuilder(eventKey: eventKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     - GET /event/{event_key}/teams
     - Gets a list of `Team` objects that competed in the given event.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Cache-Control(String), Last-Modified(String)]
     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - returns: RequestBuilder<[Team]> 
     */
    open class func getEventTeamsWithRequestBuilder(eventKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<[Team]> {
        var path = "/event/{event_key}/teams"
        let eventKeyPreEscape = "\(APIHelper.mapValueToPathItem(eventKey))"
        let eventKeyPostEscape = eventKeyPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{event_key}", with: eventKeyPostEscape, options: .literal, range: nil)
        let URLString = tba-api-v3clientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[Team]>.Type = tba-api-v3clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getEventTeamsKeys(eventKey: String, ifModifiedSince: String? = nil, completion: @escaping ((_ data: [String]?,_ error: Error?) -> Void)) {
        getEventTeamsKeysWithRequestBuilder(eventKey: eventKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     - GET /event/{event_key}/teams/keys
     - Gets a list of `Team` keys that competed in the given event.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Cache-Control(String), Last-Modified(String)]
     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - returns: RequestBuilder<[String]> 
     */
    open class func getEventTeamsKeysWithRequestBuilder(eventKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<[String]> {
        var path = "/event/{event_key}/teams/keys"
        let eventKeyPreEscape = "\(APIHelper.mapValueToPathItem(eventKey))"
        let eventKeyPostEscape = eventKeyPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{event_key}", with: eventKeyPostEscape, options: .literal, range: nil)
        let URLString = tba-api-v3clientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[String]>.Type = tba-api-v3clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getEventTeamsSimple(eventKey: String, ifModifiedSince: String? = nil, completion: @escaping ((_ data: [TeamSimple]?,_ error: Error?) -> Void)) {
        getEventTeamsSimpleWithRequestBuilder(eventKey: eventKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     - GET /event/{event_key}/teams/simple
     - Gets a short-form list of `Team` objects that competed in the given event.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Cache-Control(String), Last-Modified(String)]
     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - returns: RequestBuilder<[TeamSimple]> 
     */
    open class func getEventTeamsSimpleWithRequestBuilder(eventKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<[TeamSimple]> {
        var path = "/event/{event_key}/teams/simple"
        let eventKeyPreEscape = "\(APIHelper.mapValueToPathItem(eventKey))"
        let eventKeyPostEscape = eventKeyPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{event_key}", with: eventKeyPostEscape, options: .literal, range: nil)
        let URLString = tba-api-v3clientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[TeamSimple]>.Type = tba-api-v3clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getEventTeamsStatuses(eventKey: String, ifModifiedSince: String? = nil, completion: @escaping ((_ data: [String:TeamEventStatus]?,_ error: Error?) -> Void)) {
        getEventTeamsStatusesWithRequestBuilder(eventKey: eventKey, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     - GET /event/{event_key}/teams/statuses
     - Gets a key-value list of the event statuses for teams competing at the given event.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Cache-Control(String), Last-Modified(String)]
     - parameter eventKey: (path) TBA Event Key, eg &#x60;2016nytr&#x60; 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - returns: RequestBuilder<[String:TeamEventStatus]> 
     */
    open class func getEventTeamsStatusesWithRequestBuilder(eventKey: String, ifModifiedSince: String? = nil) -> RequestBuilder<[String:TeamEventStatus]> {
        var path = "/event/{event_key}/teams/statuses"
        let eventKeyPreEscape = "\(APIHelper.mapValueToPathItem(eventKey))"
        let eventKeyPostEscape = eventKeyPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{event_key}", with: eventKeyPostEscape, options: .literal, range: nil)
        let URLString = tba-api-v3clientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[String:TeamEventStatus]>.Type = tba-api-v3clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getEventsByYear(year: Int, ifModifiedSince: String? = nil, completion: @escaping ((_ data: [Event]?,_ error: Error?) -> Void)) {
        getEventsByYearWithRequestBuilder(year: year, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     - GET /events/{year}
     - Gets a list of events in the given year.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Cache-Control(String), Last-Modified(String)]
     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - returns: RequestBuilder<[Event]> 
     */
    open class func getEventsByYearWithRequestBuilder(year: Int, ifModifiedSince: String? = nil) -> RequestBuilder<[Event]> {
        var path = "/events/{year}"
        let yearPreEscape = "\(APIHelper.mapValueToPathItem(year))"
        let yearPostEscape = yearPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{year}", with: yearPostEscape, options: .literal, range: nil)
        let URLString = tba-api-v3clientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[Event]>.Type = tba-api-v3clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getEventsByYearKeys(year: Int, ifModifiedSince: String? = nil, completion: @escaping ((_ data: [String]?,_ error: Error?) -> Void)) {
        getEventsByYearKeysWithRequestBuilder(year: year, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     - GET /events/{year}/keys
     - Gets a list of event keys in the given year.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Cache-Control(String), Last-Modified(String)]
     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - returns: RequestBuilder<[String]> 
     */
    open class func getEventsByYearKeysWithRequestBuilder(year: Int, ifModifiedSince: String? = nil) -> RequestBuilder<[String]> {
        var path = "/events/{year}/keys"
        let yearPreEscape = "\(APIHelper.mapValueToPathItem(year))"
        let yearPostEscape = yearPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{year}", with: yearPostEscape, options: .literal, range: nil)
        let URLString = tba-api-v3clientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[String]>.Type = tba-api-v3clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getEventsByYearSimple(year: Int, ifModifiedSince: String? = nil, completion: @escaping ((_ data: [EventSimple]?,_ error: Error?) -> Void)) {
        getEventsByYearSimpleWithRequestBuilder(year: year, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     - GET /events/{year}/simple
     - Gets a short-form list of events in the given year.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Cache-Control(String), Last-Modified(String)]
     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - returns: RequestBuilder<[EventSimple]> 
     */
    open class func getEventsByYearSimpleWithRequestBuilder(year: Int, ifModifiedSince: String? = nil) -> RequestBuilder<[EventSimple]> {
        var path = "/events/{year}/simple"
        let yearPreEscape = "\(APIHelper.mapValueToPathItem(year))"
        let yearPostEscape = yearPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{year}", with: yearPostEscape, options: .literal, range: nil)
        let URLString = tba-api-v3clientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[EventSimple]>.Type = tba-api-v3clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getTeamEventsStatusesByYear(teamKey: String, year: Int, ifModifiedSince: String? = nil, completion: @escaping ((_ data: [String:TeamEventStatus]?,_ error: Error?) -> Void)) {
        getTeamEventsStatusesByYearWithRequestBuilder(teamKey: teamKey, year: year, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     - GET /team/{team_key}/events/{year}/statuses
     - Gets a key-value list of the event statuses for events this team has competed at in the given year.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Cache-Control(String), Last-Modified(String)]
     - parameter teamKey: (path) TBA Team Key, eg &#x60;frc254&#x60; 
     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - returns: RequestBuilder<[String:TeamEventStatus]> 
     */
    open class func getTeamEventsStatusesByYearWithRequestBuilder(teamKey: String, year: Int, ifModifiedSince: String? = nil) -> RequestBuilder<[String:TeamEventStatus]> {
        var path = "/team/{team_key}/events/{year}/statuses"
        let teamKeyPreEscape = "\(APIHelper.mapValueToPathItem(teamKey))"
        let teamKeyPostEscape = teamKeyPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{team_key}", with: teamKeyPostEscape, options: .literal, range: nil)
        let yearPreEscape = "\(APIHelper.mapValueToPathItem(year))"
        let yearPostEscape = yearPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{year}", with: yearPostEscape, options: .literal, range: nil)
        let URLString = tba-api-v3clientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[String:TeamEventStatus]>.Type = tba-api-v3clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter pageNum: (path) Page number of results to return, zero-indexed 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getTeams(pageNum: Int, ifModifiedSince: String? = nil, completion: @escaping ((_ data: [Team]?,_ error: Error?) -> Void)) {
        getTeamsWithRequestBuilder(pageNum: pageNum, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     - GET /teams/{page_num}
     - Gets a list of `Team` objects, paginated in groups of 500.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Cache-Control(String), Last-Modified(String)]
     - parameter pageNum: (path) Page number of results to return, zero-indexed 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - returns: RequestBuilder<[Team]> 
     */
    open class func getTeamsWithRequestBuilder(pageNum: Int, ifModifiedSince: String? = nil) -> RequestBuilder<[Team]> {
        var path = "/teams/{page_num}"
        let pageNumPreEscape = "\(APIHelper.mapValueToPathItem(pageNum))"
        let pageNumPostEscape = pageNumPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{page_num}", with: pageNumPostEscape, options: .literal, range: nil)
        let URLString = tba-api-v3clientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[Team]>.Type = tba-api-v3clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter pageNum: (path) Page number of results to return, zero-indexed 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getTeamsByYear(year: Int, pageNum: Int, ifModifiedSince: String? = nil, completion: @escaping ((_ data: [Team]?,_ error: Error?) -> Void)) {
        getTeamsByYearWithRequestBuilder(year: year, pageNum: pageNum, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     - GET /teams/{year}/{page_num}
     - Gets a list of `Team` objects that competed in the given year, paginated in groups of 500.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Cache-Control(String), Last-Modified(String)]
     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter pageNum: (path) Page number of results to return, zero-indexed 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - returns: RequestBuilder<[Team]> 
     */
    open class func getTeamsByYearWithRequestBuilder(year: Int, pageNum: Int, ifModifiedSince: String? = nil) -> RequestBuilder<[Team]> {
        var path = "/teams/{year}/{page_num}"
        let yearPreEscape = "\(APIHelper.mapValueToPathItem(year))"
        let yearPostEscape = yearPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{year}", with: yearPostEscape, options: .literal, range: nil)
        let pageNumPreEscape = "\(APIHelper.mapValueToPathItem(pageNum))"
        let pageNumPostEscape = pageNumPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{page_num}", with: pageNumPostEscape, options: .literal, range: nil)
        let URLString = tba-api-v3clientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[Team]>.Type = tba-api-v3clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter pageNum: (path) Page number of results to return, zero-indexed 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getTeamsByYearKeys(year: Int, pageNum: Int, ifModifiedSince: String? = nil, completion: @escaping ((_ data: [String]?,_ error: Error?) -> Void)) {
        getTeamsByYearKeysWithRequestBuilder(year: year, pageNum: pageNum, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     - GET /teams/{year}/{page_num}/keys
     - Gets a list Team Keys that competed in the given year, paginated in groups of 500.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Cache-Control(String), Last-Modified(String)]
     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter pageNum: (path) Page number of results to return, zero-indexed 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - returns: RequestBuilder<[String]> 
     */
    open class func getTeamsByYearKeysWithRequestBuilder(year: Int, pageNum: Int, ifModifiedSince: String? = nil) -> RequestBuilder<[String]> {
        var path = "/teams/{year}/{page_num}/keys"
        let yearPreEscape = "\(APIHelper.mapValueToPathItem(year))"
        let yearPostEscape = yearPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{year}", with: yearPostEscape, options: .literal, range: nil)
        let pageNumPreEscape = "\(APIHelper.mapValueToPathItem(pageNum))"
        let pageNumPostEscape = pageNumPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{page_num}", with: pageNumPostEscape, options: .literal, range: nil)
        let URLString = tba-api-v3clientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[String]>.Type = tba-api-v3clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter pageNum: (path) Page number of results to return, zero-indexed 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getTeamsByYearSimple(year: Int, pageNum: Int, ifModifiedSince: String? = nil, completion: @escaping ((_ data: [TeamSimple]?,_ error: Error?) -> Void)) {
        getTeamsByYearSimpleWithRequestBuilder(year: year, pageNum: pageNum, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     - GET /teams/{year}/{page_num}/simple
     - Gets a list of short form `Team_Simple` objects that competed in the given year, paginated in groups of 500.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Cache-Control(String), Last-Modified(String)]
     - parameter year: (path) Competition Year (or Season). Must be 4 digits. 
     - parameter pageNum: (path) Page number of results to return, zero-indexed 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - returns: RequestBuilder<[TeamSimple]> 
     */
    open class func getTeamsByYearSimpleWithRequestBuilder(year: Int, pageNum: Int, ifModifiedSince: String? = nil) -> RequestBuilder<[TeamSimple]> {
        var path = "/teams/{year}/{page_num}/simple"
        let yearPreEscape = "\(APIHelper.mapValueToPathItem(year))"
        let yearPostEscape = yearPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{year}", with: yearPostEscape, options: .literal, range: nil)
        let pageNumPreEscape = "\(APIHelper.mapValueToPathItem(pageNum))"
        let pageNumPostEscape = pageNumPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{page_num}", with: pageNumPostEscape, options: .literal, range: nil)
        let URLString = tba-api-v3clientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[TeamSimple]>.Type = tba-api-v3clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter pageNum: (path) Page number of results to return, zero-indexed 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getTeamsKeys(pageNum: Int, ifModifiedSince: String? = nil, completion: @escaping ((_ data: [String]?,_ error: Error?) -> Void)) {
        getTeamsKeysWithRequestBuilder(pageNum: pageNum, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     - GET /teams/{page_num}/keys
     - Gets a list of Team keys, paginated in groups of 500. (Note, each page will not have 500 teams, but will include the teams within that range of 500.)
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Cache-Control(String), Last-Modified(String)]
     - parameter pageNum: (path) Page number of results to return, zero-indexed 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - returns: RequestBuilder<[String]> 
     */
    open class func getTeamsKeysWithRequestBuilder(pageNum: Int, ifModifiedSince: String? = nil) -> RequestBuilder<[String]> {
        var path = "/teams/{page_num}/keys"
        let pageNumPreEscape = "\(APIHelper.mapValueToPathItem(pageNum))"
        let pageNumPostEscape = pageNumPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{page_num}", with: pageNumPostEscape, options: .literal, range: nil)
        let URLString = tba-api-v3clientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[String]>.Type = tba-api-v3clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter pageNum: (path) Page number of results to return, zero-indexed 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getTeamsSimple(pageNum: Int, ifModifiedSince: String? = nil, completion: @escaping ((_ data: [TeamSimple]?,_ error: Error?) -> Void)) {
        getTeamsSimpleWithRequestBuilder(pageNum: pageNum, ifModifiedSince: ifModifiedSince).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     - GET /teams/{page_num}/simple
     - Gets a list of short form `Team_Simple` objects, paginated in groups of 500.
     - API Key:
       - type: apiKey X-TBA-Auth-Key 
       - name: apiKey
     - responseHeaders: [Cache-Control(String), Last-Modified(String)]
     - parameter pageNum: (path) Page number of results to return, zero-indexed 
     - parameter ifModifiedSince: (header) Value of the &#x60;Last-Modified&#x60; header in the most recently cached response by the client. (optional)
     - returns: RequestBuilder<[TeamSimple]> 
     */
    open class func getTeamsSimpleWithRequestBuilder(pageNum: Int, ifModifiedSince: String? = nil) -> RequestBuilder<[TeamSimple]> {
        var path = "/teams/{page_num}/simple"
        let pageNumPreEscape = "\(APIHelper.mapValueToPathItem(pageNum))"
        let pageNumPostEscape = pageNumPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{page_num}", with: pageNumPostEscape, options: .literal, range: nil)
        let URLString = tba-api-v3clientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "If-Modified-Since": ifModifiedSince
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[TeamSimple]>.Type = tba-api-v3clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

}
