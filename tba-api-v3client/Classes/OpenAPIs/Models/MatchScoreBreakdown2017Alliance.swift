//
// MatchScoreBreakdown2017Alliance.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation



public struct MatchScoreBreakdown2017Alliance: Codable {

    public enum Robot1Auto: String, Codable {
        case unknown = "Unknown"
        case mobility = "Mobility"
        case _none = "None"
    }
    public enum Robot2Auto: String, Codable {
        case unknown = "Unknown"
        case mobility = "Mobility"
        case _none = "None"
    }
    public enum Robot3Auto: String, Codable {
        case unknown = "Unknown"
        case mobility = "Mobility"
        case _none = "None"
    }
    public var autoPoints: Int?
    public var teleopPoints: Int?
    public var foulPoints: Int?
    public var adjustPoints: Int?
    public var totalPoints: Int?
    public var robot1Auto: Robot1Auto?
    public var robot2Auto: Robot2Auto?
    public var robot3Auto: Robot3Auto?
    public var rotor1Auto: Bool?
    public var rotor2Auto: Bool?
    public var autoFuelLow: Int?
    public var autoFuelHigh: Int?
    public var autoMobilityPoints: Int?
    public var autoRotorPoints: Int?
    public var autoFuelPoints: Int?
    public var teleopFuelPoints: Int?
    public var teleopFuelLow: Int?
    public var teleopFuelHigh: Int?
    public var teleopRotorPoints: Int?
    public var kPaRankingPointAchieved: Bool?
    public var teleopTakeoffPoints: Int?
    public var kPaBonusPoints: Int?
    public var rotorBonusPoints: Int?
    public var rotor1Engaged: Bool?
    public var rotor2Engaged: Bool?
    public var rotor3Engaged: Bool?
    public var rotor4Engaged: Bool?
    public var rotorRankingPointAchieved: Bool?
    public var techFoulCount: Int?
    public var foulCount: Int?
    public var touchpadNear: String?
    public var touchpadMiddle: String?
    public var touchpadFar: String?

    public init(autoPoints: Int?, teleopPoints: Int?, foulPoints: Int?, adjustPoints: Int?, totalPoints: Int?, robot1Auto: Robot1Auto?, robot2Auto: Robot2Auto?, robot3Auto: Robot3Auto?, rotor1Auto: Bool?, rotor2Auto: Bool?, autoFuelLow: Int?, autoFuelHigh: Int?, autoMobilityPoints: Int?, autoRotorPoints: Int?, autoFuelPoints: Int?, teleopFuelPoints: Int?, teleopFuelLow: Int?, teleopFuelHigh: Int?, teleopRotorPoints: Int?, kPaRankingPointAchieved: Bool?, teleopTakeoffPoints: Int?, kPaBonusPoints: Int?, rotorBonusPoints: Int?, rotor1Engaged: Bool?, rotor2Engaged: Bool?, rotor3Engaged: Bool?, rotor4Engaged: Bool?, rotorRankingPointAchieved: Bool?, techFoulCount: Int?, foulCount: Int?, touchpadNear: String?, touchpadMiddle: String?, touchpadFar: String?) {
        self.autoPoints = autoPoints
        self.teleopPoints = teleopPoints
        self.foulPoints = foulPoints
        self.adjustPoints = adjustPoints
        self.totalPoints = totalPoints
        self.robot1Auto = robot1Auto
        self.robot2Auto = robot2Auto
        self.robot3Auto = robot3Auto
        self.rotor1Auto = rotor1Auto
        self.rotor2Auto = rotor2Auto
        self.autoFuelLow = autoFuelLow
        self.autoFuelHigh = autoFuelHigh
        self.autoMobilityPoints = autoMobilityPoints
        self.autoRotorPoints = autoRotorPoints
        self.autoFuelPoints = autoFuelPoints
        self.teleopFuelPoints = teleopFuelPoints
        self.teleopFuelLow = teleopFuelLow
        self.teleopFuelHigh = teleopFuelHigh
        self.teleopRotorPoints = teleopRotorPoints
        self.kPaRankingPointAchieved = kPaRankingPointAchieved
        self.teleopTakeoffPoints = teleopTakeoffPoints
        self.kPaBonusPoints = kPaBonusPoints
        self.rotorBonusPoints = rotorBonusPoints
        self.rotor1Engaged = rotor1Engaged
        self.rotor2Engaged = rotor2Engaged
        self.rotor3Engaged = rotor3Engaged
        self.rotor4Engaged = rotor4Engaged
        self.rotorRankingPointAchieved = rotorRankingPointAchieved
        self.techFoulCount = techFoulCount
        self.foulCount = foulCount
        self.touchpadNear = touchpadNear
        self.touchpadMiddle = touchpadMiddle
        self.touchpadFar = touchpadFar
    }


}

