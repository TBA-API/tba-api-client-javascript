//
// EventInsights2016.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation


/** Insights for FIRST Stronghold qualification and elimination matches. */

public struct EventInsights2016: Codable {

    /** For the Low Bar - An array with three values, number of times damaged, number of opportunities to damage, and percentage. */
    public var lowBar: [Float]
    /** For the Cheval De Frise - An array with three values, number of times damaged, number of opportunities to damage, and percentage. */
    public var aChevalDeFrise: [Float]
    /** For the Portcullis - An array with three values, number of times damaged, number of opportunities to damage, and percentage. */
    public var aPortcullis: [Float]
    /** For the Ramparts - An array with three values, number of times damaged, number of opportunities to damage, and percentage. */
    public var bRamparts: [Float]
    /** For the Moat - An array with three values, number of times damaged, number of opportunities to damage, and percentage. */
    public var bMoat: [Float]
    /** For the Sally Port - An array with three values, number of times damaged, number of opportunities to damage, and percentage. */
    public var cSallyPort: [Float]
    /** For the Drawbridge - An array with three values, number of times damaged, number of opportunities to damage, and percentage. */
    public var cDrawbridge: [Float]
    /** For the Rough Terrain - An array with three values, number of times damaged, number of opportunities to damage, and percentage. */
    public var dRoughTerrain: [Float]
    /** For the Rock Wall - An array with three values, number of times damaged, number of opportunities to damage, and percentage. */
    public var dRockWall: [Float]
    /** Average number of high goals scored. */
    public var averageHighGoals: Float
    /** Average number of low goals scored. */
    public var averageLowGoals: Float
    /** An array with three values, number of times breached, number of opportunities to breach, and percentage. */
    public var breaches: [Float]
    /** An array with three values, number of times scaled, number of opportunities to scale, and percentage. */
    public var scales: [Float]
    /** An array with three values, number of times challenged, number of opportunities to challenge, and percentage. */
    public var challenges: [Float]
    /** An array with three values, number of times captured, number of opportunities to capture, and percentage. */
    public var captures: [Float]
    /** Average winning score. */
    public var averageWinScore: Float
    /** Average margin of victory. */
    public var averageWinMargin: Float
    /** Average total score. */
    public var averageScore: Float
    /** Average autonomous score. */
    public var averageAutoScore: Float
    /** Average crossing score. */
    public var averageCrossingScore: Float
    /** Average boulder score. */
    public var averageBoulderScore: Float
    /** Average tower score. */
    public var averageTowerScore: Float
    /** Average foul score. */
    public var averageFoulScore: Float
    /** An array with three values, high score, match key from the match with the high score, and the name of the match. */
    public var highScore: [String]

    public init(lowBar: [Float], aChevalDeFrise: [Float], aPortcullis: [Float], bRamparts: [Float], bMoat: [Float], cSallyPort: [Float], cDrawbridge: [Float], dRoughTerrain: [Float], dRockWall: [Float], averageHighGoals: Float, averageLowGoals: Float, breaches: [Float], scales: [Float], challenges: [Float], captures: [Float], averageWinScore: Float, averageWinMargin: Float, averageScore: Float, averageAutoScore: Float, averageCrossingScore: Float, averageBoulderScore: Float, averageTowerScore: Float, averageFoulScore: Float, highScore: [String]) {
        self.lowBar = lowBar
        self.aChevalDeFrise = aChevalDeFrise
        self.aPortcullis = aPortcullis
        self.bRamparts = bRamparts
        self.bMoat = bMoat
        self.cSallyPort = cSallyPort
        self.cDrawbridge = cDrawbridge
        self.dRoughTerrain = dRoughTerrain
        self.dRockWall = dRockWall
        self.averageHighGoals = averageHighGoals
        self.averageLowGoals = averageLowGoals
        self.breaches = breaches
        self.scales = scales
        self.challenges = challenges
        self.captures = captures
        self.averageWinScore = averageWinScore
        self.averageWinMargin = averageWinMargin
        self.averageScore = averageScore
        self.averageAutoScore = averageAutoScore
        self.averageCrossingScore = averageCrossingScore
        self.averageBoulderScore = averageBoulderScore
        self.averageTowerScore = averageTowerScore
        self.averageFoulScore = averageFoulScore
        self.highScore = highScore
    }

    public enum CodingKeys: String, CodingKey { 
        case lowBar = "LowBar"
        case aChevalDeFrise = "A_ChevalDeFrise"
        case aPortcullis = "A_Portcullis"
        case bRamparts = "B_Ramparts"
        case bMoat = "B_Moat"
        case cSallyPort = "C_SallyPort"
        case cDrawbridge = "C_Drawbridge"
        case dRoughTerrain = "D_RoughTerrain"
        case dRockWall = "D_RockWall"
        case averageHighGoals = "average_high_goals"
        case averageLowGoals = "average_low_goals"
        case breaches
        case scales
        case challenges
        case captures
        case averageWinScore = "average_win_score"
        case averageWinMargin = "average_win_margin"
        case averageScore = "average_score"
        case averageAutoScore = "average_auto_score"
        case averageCrossingScore = "average_crossing_score"
        case averageBoulderScore = "average_boulder_score"
        case averageTowerScore = "average_tower_score"
        case averageFoulScore = "average_foul_score"
        case highScore = "high_score"
    }


}

