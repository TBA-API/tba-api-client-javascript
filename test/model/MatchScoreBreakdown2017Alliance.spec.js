/**
 * The Blue Alliance API v3
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).    A `User-Agent` header may need to be set to prevent a 403 Unauthorized error.
 *
 * OpenAPI spec version: 3.03.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TbaApiV3client);
  }
}(this, function(expect, TbaApiV3client) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TbaApiV3client.MatchScoreBreakdown2017Alliance();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('MatchScoreBreakdown2017Alliance', function() {
    it('should create an instance of MatchScoreBreakdown2017Alliance', function() {
      // uncomment below and update the code to test MatchScoreBreakdown2017Alliance
      //var instane = new TbaApiV3client.MatchScoreBreakdown2017Alliance();
      //expect(instance).to.be.a(TbaApiV3client.MatchScoreBreakdown2017Alliance);
    });

    it('should have the property autoPoints (base name: "autoPoints")', function() {
      // uncomment below and update the code to test the property autoPoints
      //var instane = new TbaApiV3client.MatchScoreBreakdown2017Alliance();
      //expect(instance).to.be();
    });

    it('should have the property teleopPoints (base name: "teleopPoints")', function() {
      // uncomment below and update the code to test the property teleopPoints
      //var instane = new TbaApiV3client.MatchScoreBreakdown2017Alliance();
      //expect(instance).to.be();
    });

    it('should have the property foulPoints (base name: "foulPoints")', function() {
      // uncomment below and update the code to test the property foulPoints
      //var instane = new TbaApiV3client.MatchScoreBreakdown2017Alliance();
      //expect(instance).to.be();
    });

    it('should have the property adjustPoints (base name: "adjustPoints")', function() {
      // uncomment below and update the code to test the property adjustPoints
      //var instane = new TbaApiV3client.MatchScoreBreakdown2017Alliance();
      //expect(instance).to.be();
    });

    it('should have the property totalPoints (base name: "totalPoints")', function() {
      // uncomment below and update the code to test the property totalPoints
      //var instane = new TbaApiV3client.MatchScoreBreakdown2017Alliance();
      //expect(instance).to.be();
    });

    it('should have the property robot1Auto (base name: "robot1Auto")', function() {
      // uncomment below and update the code to test the property robot1Auto
      //var instane = new TbaApiV3client.MatchScoreBreakdown2017Alliance();
      //expect(instance).to.be();
    });

    it('should have the property robot2Auto (base name: "robot2Auto")', function() {
      // uncomment below and update the code to test the property robot2Auto
      //var instane = new TbaApiV3client.MatchScoreBreakdown2017Alliance();
      //expect(instance).to.be();
    });

    it('should have the property robot3Auto (base name: "robot3Auto")', function() {
      // uncomment below and update the code to test the property robot3Auto
      //var instane = new TbaApiV3client.MatchScoreBreakdown2017Alliance();
      //expect(instance).to.be();
    });

    it('should have the property rotor1Auto (base name: "rotor1Auto")', function() {
      // uncomment below and update the code to test the property rotor1Auto
      //var instane = new TbaApiV3client.MatchScoreBreakdown2017Alliance();
      //expect(instance).to.be();
    });

    it('should have the property rotor2Auto (base name: "rotor2Auto")', function() {
      // uncomment below and update the code to test the property rotor2Auto
      //var instane = new TbaApiV3client.MatchScoreBreakdown2017Alliance();
      //expect(instance).to.be();
    });

    it('should have the property autoFuelLow (base name: "autoFuelLow")', function() {
      // uncomment below and update the code to test the property autoFuelLow
      //var instane = new TbaApiV3client.MatchScoreBreakdown2017Alliance();
      //expect(instance).to.be();
    });

    it('should have the property autoFuelHigh (base name: "autoFuelHigh")', function() {
      // uncomment below and update the code to test the property autoFuelHigh
      //var instane = new TbaApiV3client.MatchScoreBreakdown2017Alliance();
      //expect(instance).to.be();
    });

    it('should have the property autoMobilityPoints (base name: "autoMobilityPoints")', function() {
      // uncomment below and update the code to test the property autoMobilityPoints
      //var instane = new TbaApiV3client.MatchScoreBreakdown2017Alliance();
      //expect(instance).to.be();
    });

    it('should have the property autoRotorPoints (base name: "autoRotorPoints")', function() {
      // uncomment below and update the code to test the property autoRotorPoints
      //var instane = new TbaApiV3client.MatchScoreBreakdown2017Alliance();
      //expect(instance).to.be();
    });

    it('should have the property autoFuelPoints (base name: "autoFuelPoints")', function() {
      // uncomment below and update the code to test the property autoFuelPoints
      //var instane = new TbaApiV3client.MatchScoreBreakdown2017Alliance();
      //expect(instance).to.be();
    });

    it('should have the property teleopFuelPoints (base name: "teleopFuelPoints")', function() {
      // uncomment below and update the code to test the property teleopFuelPoints
      //var instane = new TbaApiV3client.MatchScoreBreakdown2017Alliance();
      //expect(instance).to.be();
    });

    it('should have the property teleopFuelLow (base name: "teleopFuelLow")', function() {
      // uncomment below and update the code to test the property teleopFuelLow
      //var instane = new TbaApiV3client.MatchScoreBreakdown2017Alliance();
      //expect(instance).to.be();
    });

    it('should have the property teleopFuelHigh (base name: "teleopFuelHigh")', function() {
      // uncomment below and update the code to test the property teleopFuelHigh
      //var instane = new TbaApiV3client.MatchScoreBreakdown2017Alliance();
      //expect(instance).to.be();
    });

    it('should have the property teleopRotorPoints (base name: "teleopRotorPoints")', function() {
      // uncomment below and update the code to test the property teleopRotorPoints
      //var instane = new TbaApiV3client.MatchScoreBreakdown2017Alliance();
      //expect(instance).to.be();
    });

    it('should have the property kPaRankingPointAchieved (base name: "kPaRankingPointAchieved")', function() {
      // uncomment below and update the code to test the property kPaRankingPointAchieved
      //var instane = new TbaApiV3client.MatchScoreBreakdown2017Alliance();
      //expect(instance).to.be();
    });

    it('should have the property teleopTakeoffPoints (base name: "teleopTakeoffPoints")', function() {
      // uncomment below and update the code to test the property teleopTakeoffPoints
      //var instane = new TbaApiV3client.MatchScoreBreakdown2017Alliance();
      //expect(instance).to.be();
    });

    it('should have the property kPaBonusPoints (base name: "kPaBonusPoints")', function() {
      // uncomment below and update the code to test the property kPaBonusPoints
      //var instane = new TbaApiV3client.MatchScoreBreakdown2017Alliance();
      //expect(instance).to.be();
    });

    it('should have the property rotorBonusPoints (base name: "rotorBonusPoints")', function() {
      // uncomment below and update the code to test the property rotorBonusPoints
      //var instane = new TbaApiV3client.MatchScoreBreakdown2017Alliance();
      //expect(instance).to.be();
    });

    it('should have the property rotor1Engaged (base name: "rotor1Engaged")', function() {
      // uncomment below and update the code to test the property rotor1Engaged
      //var instane = new TbaApiV3client.MatchScoreBreakdown2017Alliance();
      //expect(instance).to.be();
    });

    it('should have the property rotor2Engaged (base name: "rotor2Engaged")', function() {
      // uncomment below and update the code to test the property rotor2Engaged
      //var instane = new TbaApiV3client.MatchScoreBreakdown2017Alliance();
      //expect(instance).to.be();
    });

    it('should have the property rotor3Engaged (base name: "rotor3Engaged")', function() {
      // uncomment below and update the code to test the property rotor3Engaged
      //var instane = new TbaApiV3client.MatchScoreBreakdown2017Alliance();
      //expect(instance).to.be();
    });

    it('should have the property rotor4Engaged (base name: "rotor4Engaged")', function() {
      // uncomment below and update the code to test the property rotor4Engaged
      //var instane = new TbaApiV3client.MatchScoreBreakdown2017Alliance();
      //expect(instance).to.be();
    });

    it('should have the property rotorRankingPointAchieved (base name: "rotorRankingPointAchieved")', function() {
      // uncomment below and update the code to test the property rotorRankingPointAchieved
      //var instane = new TbaApiV3client.MatchScoreBreakdown2017Alliance();
      //expect(instance).to.be();
    });

    it('should have the property techFoulCount (base name: "techFoulCount")', function() {
      // uncomment below and update the code to test the property techFoulCount
      //var instane = new TbaApiV3client.MatchScoreBreakdown2017Alliance();
      //expect(instance).to.be();
    });

    it('should have the property foulCount (base name: "foulCount")', function() {
      // uncomment below and update the code to test the property foulCount
      //var instane = new TbaApiV3client.MatchScoreBreakdown2017Alliance();
      //expect(instance).to.be();
    });

    it('should have the property touchpadNear (base name: "touchpadNear")', function() {
      // uncomment below and update the code to test the property touchpadNear
      //var instane = new TbaApiV3client.MatchScoreBreakdown2017Alliance();
      //expect(instance).to.be();
    });

    it('should have the property touchpadMiddle (base name: "touchpadMiddle")', function() {
      // uncomment below and update the code to test the property touchpadMiddle
      //var instane = new TbaApiV3client.MatchScoreBreakdown2017Alliance();
      //expect(instance).to.be();
    });

    it('should have the property touchpadFar (base name: "touchpadFar")', function() {
      // uncomment below and update the code to test the property touchpadFar
      //var instane = new TbaApiV3client.MatchScoreBreakdown2017Alliance();
      //expect(instance).to.be();
    });

  });

}));
