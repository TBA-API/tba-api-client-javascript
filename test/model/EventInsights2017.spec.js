/**
 * The Blue Alliance API v3
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).    A `User-Agent` header may need to be set to prevent a 403 Unauthorized error.
 *
 * OpenAPI spec version: 3.03.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TbaApiV3client);
  }
}(this, function(expect, TbaApiV3client) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TbaApiV3client.EventInsights2017();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('EventInsights2017', function() {
    it('should create an instance of EventInsights2017', function() {
      // uncomment below and update the code to test EventInsights2017
      //var instane = new TbaApiV3client.EventInsights2017();
      //expect(instance).to.be.a(TbaApiV3client.EventInsights2017);
    });

    it('should have the property averageFoulScore (base name: "average_foul_score")', function() {
      // uncomment below and update the code to test the property averageFoulScore
      //var instane = new TbaApiV3client.EventInsights2017();
      //expect(instance).to.be();
    });

    it('should have the property averageFuelPoints (base name: "average_fuel_points")', function() {
      // uncomment below and update the code to test the property averageFuelPoints
      //var instane = new TbaApiV3client.EventInsights2017();
      //expect(instance).to.be();
    });

    it('should have the property averageFuelPointsAuto (base name: "average_fuel_points_auto")', function() {
      // uncomment below and update the code to test the property averageFuelPointsAuto
      //var instane = new TbaApiV3client.EventInsights2017();
      //expect(instance).to.be();
    });

    it('should have the property averageFuelPointsTeleop (base name: "average_fuel_points_teleop")', function() {
      // uncomment below and update the code to test the property averageFuelPointsTeleop
      //var instane = new TbaApiV3client.EventInsights2017();
      //expect(instance).to.be();
    });

    it('should have the property averageHighGoals (base name: "average_high_goals")', function() {
      // uncomment below and update the code to test the property averageHighGoals
      //var instane = new TbaApiV3client.EventInsights2017();
      //expect(instance).to.be();
    });

    it('should have the property averageHighGoalsAuto (base name: "average_high_goals_auto")', function() {
      // uncomment below and update the code to test the property averageHighGoalsAuto
      //var instane = new TbaApiV3client.EventInsights2017();
      //expect(instance).to.be();
    });

    it('should have the property averageHighGoalsTeleop (base name: "average_high_goals_teleop")', function() {
      // uncomment below and update the code to test the property averageHighGoalsTeleop
      //var instane = new TbaApiV3client.EventInsights2017();
      //expect(instance).to.be();
    });

    it('should have the property averageLowGoals (base name: "average_low_goals")', function() {
      // uncomment below and update the code to test the property averageLowGoals
      //var instane = new TbaApiV3client.EventInsights2017();
      //expect(instance).to.be();
    });

    it('should have the property averageLowGoalsAuto (base name: "average_low_goals_auto")', function() {
      // uncomment below and update the code to test the property averageLowGoalsAuto
      //var instane = new TbaApiV3client.EventInsights2017();
      //expect(instance).to.be();
    });

    it('should have the property averageLowGoalsTeleop (base name: "average_low_goals_teleop")', function() {
      // uncomment below and update the code to test the property averageLowGoalsTeleop
      //var instane = new TbaApiV3client.EventInsights2017();
      //expect(instance).to.be();
    });

    it('should have the property averageMobilityPointsAuto (base name: "average_mobility_points_auto")', function() {
      // uncomment below and update the code to test the property averageMobilityPointsAuto
      //var instane = new TbaApiV3client.EventInsights2017();
      //expect(instance).to.be();
    });

    it('should have the property averagePointsAuto (base name: "average_points_auto")', function() {
      // uncomment below and update the code to test the property averagePointsAuto
      //var instane = new TbaApiV3client.EventInsights2017();
      //expect(instance).to.be();
    });

    it('should have the property averagePointsTeleop (base name: "average_points_teleop")', function() {
      // uncomment below and update the code to test the property averagePointsTeleop
      //var instane = new TbaApiV3client.EventInsights2017();
      //expect(instance).to.be();
    });

    it('should have the property averageRotorPoints (base name: "average_rotor_points")', function() {
      // uncomment below and update the code to test the property averageRotorPoints
      //var instane = new TbaApiV3client.EventInsights2017();
      //expect(instance).to.be();
    });

    it('should have the property averageRotorPointsAuto (base name: "average_rotor_points_auto")', function() {
      // uncomment below and update the code to test the property averageRotorPointsAuto
      //var instane = new TbaApiV3client.EventInsights2017();
      //expect(instance).to.be();
    });

    it('should have the property averageRotorPointsTeleop (base name: "average_rotor_points_teleop")', function() {
      // uncomment below and update the code to test the property averageRotorPointsTeleop
      //var instane = new TbaApiV3client.EventInsights2017();
      //expect(instance).to.be();
    });

    it('should have the property averageScore (base name: "average_score")', function() {
      // uncomment below and update the code to test the property averageScore
      //var instane = new TbaApiV3client.EventInsights2017();
      //expect(instance).to.be();
    });

    it('should have the property averageTakeoffPointsTeleop (base name: "average_takeoff_points_teleop")', function() {
      // uncomment below and update the code to test the property averageTakeoffPointsTeleop
      //var instane = new TbaApiV3client.EventInsights2017();
      //expect(instance).to.be();
    });

    it('should have the property averageWinMargin (base name: "average_win_margin")', function() {
      // uncomment below and update the code to test the property averageWinMargin
      //var instane = new TbaApiV3client.EventInsights2017();
      //expect(instance).to.be();
    });

    it('should have the property averageWinScore (base name: "average_win_score")', function() {
      // uncomment below and update the code to test the property averageWinScore
      //var instane = new TbaApiV3client.EventInsights2017();
      //expect(instance).to.be();
    });

    it('should have the property highKpa (base name: "high_kpa")', function() {
      // uncomment below and update the code to test the property highKpa
      //var instane = new TbaApiV3client.EventInsights2017();
      //expect(instance).to.be();
    });

    it('should have the property highScore (base name: "high_score")', function() {
      // uncomment below and update the code to test the property highScore
      //var instane = new TbaApiV3client.EventInsights2017();
      //expect(instance).to.be();
    });

    it('should have the property kpaAchieved (base name: "kpa_achieved")', function() {
      // uncomment below and update the code to test the property kpaAchieved
      //var instane = new TbaApiV3client.EventInsights2017();
      //expect(instance).to.be();
    });

    it('should have the property mobilityCounts (base name: "mobility_counts")', function() {
      // uncomment below and update the code to test the property mobilityCounts
      //var instane = new TbaApiV3client.EventInsights2017();
      //expect(instance).to.be();
    });

    it('should have the property rotor1Engaged (base name: "rotor_1_engaged")', function() {
      // uncomment below and update the code to test the property rotor1Engaged
      //var instane = new TbaApiV3client.EventInsights2017();
      //expect(instance).to.be();
    });

    it('should have the property rotor1EngagedAuto (base name: "rotor_1_engaged_auto")', function() {
      // uncomment below and update the code to test the property rotor1EngagedAuto
      //var instane = new TbaApiV3client.EventInsights2017();
      //expect(instance).to.be();
    });

    it('should have the property rotor2Engaged (base name: "rotor_2_engaged")', function() {
      // uncomment below and update the code to test the property rotor2Engaged
      //var instane = new TbaApiV3client.EventInsights2017();
      //expect(instance).to.be();
    });

    it('should have the property rotor2EngagedAuto (base name: "rotor_2_engaged_auto")', function() {
      // uncomment below and update the code to test the property rotor2EngagedAuto
      //var instane = new TbaApiV3client.EventInsights2017();
      //expect(instance).to.be();
    });

    it('should have the property rotor3Engaged (base name: "rotor_3_engaged")', function() {
      // uncomment below and update the code to test the property rotor3Engaged
      //var instane = new TbaApiV3client.EventInsights2017();
      //expect(instance).to.be();
    });

    it('should have the property rotor4Engaged (base name: "rotor_4_engaged")', function() {
      // uncomment below and update the code to test the property rotor4Engaged
      //var instane = new TbaApiV3client.EventInsights2017();
      //expect(instance).to.be();
    });

    it('should have the property takeoffCounts (base name: "takeoff_counts")', function() {
      // uncomment below and update the code to test the property takeoffCounts
      //var instane = new TbaApiV3client.EventInsights2017();
      //expect(instance).to.be();
    });

    it('should have the property unicornMatches (base name: "unicorn_matches")', function() {
      // uncomment below and update the code to test the property unicornMatches
      //var instane = new TbaApiV3client.EventInsights2017();
      //expect(instance).to.be();
    });

  });

}));
