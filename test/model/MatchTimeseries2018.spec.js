/**
 * The Blue Alliance API v3
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).    A `User-Agent` header may need to be set to prevent a 403 Unauthorized error.
 *
 * OpenAPI spec version: 3.03.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TbaApiV3client);
  }
}(this, function(expect, TbaApiV3client) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TbaApiV3client.MatchTimeseries2018();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('MatchTimeseries2018', function() {
    it('should create an instance of MatchTimeseries2018', function() {
      // uncomment below and update the code to test MatchTimeseries2018
      //var instane = new TbaApiV3client.MatchTimeseries2018();
      //expect(instance).to.be.a(TbaApiV3client.MatchTimeseries2018);
    });

    it('should have the property eventKey (base name: "event_key")', function() {
      // uncomment below and update the code to test the property eventKey
      //var instane = new TbaApiV3client.MatchTimeseries2018();
      //expect(instance).to.be();
    });

    it('should have the property matchId (base name: "match_id")', function() {
      // uncomment below and update the code to test the property matchId
      //var instane = new TbaApiV3client.MatchTimeseries2018();
      //expect(instance).to.be();
    });

    it('should have the property mode (base name: "mode")', function() {
      // uncomment below and update the code to test the property mode
      //var instane = new TbaApiV3client.MatchTimeseries2018();
      //expect(instance).to.be();
    });

    it('should have the property play (base name: "play")', function() {
      // uncomment below and update the code to test the property play
      //var instane = new TbaApiV3client.MatchTimeseries2018();
      //expect(instance).to.be();
    });

    it('should have the property timeRemaining (base name: "time_remaining")', function() {
      // uncomment below and update the code to test the property timeRemaining
      //var instane = new TbaApiV3client.MatchTimeseries2018();
      //expect(instance).to.be();
    });

    it('should have the property blueAutoQuest (base name: "blue_auto_quest")', function() {
      // uncomment below and update the code to test the property blueAutoQuest
      //var instane = new TbaApiV3client.MatchTimeseries2018();
      //expect(instance).to.be();
    });

    it('should have the property blueBoostCount (base name: "blue_boost_count")', function() {
      // uncomment below and update the code to test the property blueBoostCount
      //var instane = new TbaApiV3client.MatchTimeseries2018();
      //expect(instance).to.be();
    });

    it('should have the property blueBoostPlayed (base name: "blue_boost_played")', function() {
      // uncomment below and update the code to test the property blueBoostPlayed
      //var instane = new TbaApiV3client.MatchTimeseries2018();
      //expect(instance).to.be();
    });

    it('should have the property blueCurrentPowerup (base name: "blue_current_powerup")', function() {
      // uncomment below and update the code to test the property blueCurrentPowerup
      //var instane = new TbaApiV3client.MatchTimeseries2018();
      //expect(instance).to.be();
    });

    it('should have the property blueFaceTheBoss (base name: "blue_face_the_boss")', function() {
      // uncomment below and update the code to test the property blueFaceTheBoss
      //var instane = new TbaApiV3client.MatchTimeseries2018();
      //expect(instance).to.be();
    });

    it('should have the property blueForceCount (base name: "blue_force_count")', function() {
      // uncomment below and update the code to test the property blueForceCount
      //var instane = new TbaApiV3client.MatchTimeseries2018();
      //expect(instance).to.be();
    });

    it('should have the property blueForcePlayed (base name: "blue_force_played")', function() {
      // uncomment below and update the code to test the property blueForcePlayed
      //var instane = new TbaApiV3client.MatchTimeseries2018();
      //expect(instance).to.be();
    });

    it('should have the property blueLevitateCount (base name: "blue_levitate_count")', function() {
      // uncomment below and update the code to test the property blueLevitateCount
      //var instane = new TbaApiV3client.MatchTimeseries2018();
      //expect(instance).to.be();
    });

    it('should have the property blueLevitatePlayed (base name: "blue_levitate_played")', function() {
      // uncomment below and update the code to test the property blueLevitatePlayed
      //var instane = new TbaApiV3client.MatchTimeseries2018();
      //expect(instance).to.be();
    });

    it('should have the property bluePowerupTimeRemaining (base name: "blue_powerup_time_remaining")', function() {
      // uncomment below and update the code to test the property bluePowerupTimeRemaining
      //var instane = new TbaApiV3client.MatchTimeseries2018();
      //expect(instance).to.be();
    });

    it('should have the property blueScaleOwned (base name: "blue_scale_owned")', function() {
      // uncomment below and update the code to test the property blueScaleOwned
      //var instane = new TbaApiV3client.MatchTimeseries2018();
      //expect(instance).to.be();
    });

    it('should have the property blueScore (base name: "blue_score")', function() {
      // uncomment below and update the code to test the property blueScore
      //var instane = new TbaApiV3client.MatchTimeseries2018();
      //expect(instance).to.be();
    });

    it('should have the property blueSwitchOwned (base name: "blue_switch_owned")', function() {
      // uncomment below and update the code to test the property blueSwitchOwned
      //var instane = new TbaApiV3client.MatchTimeseries2018();
      //expect(instance).to.be();
    });

    it('should have the property redAutoQuest (base name: "red_auto_quest")', function() {
      // uncomment below and update the code to test the property redAutoQuest
      //var instane = new TbaApiV3client.MatchTimeseries2018();
      //expect(instance).to.be();
    });

    it('should have the property redBoostCount (base name: "red_boost_count")', function() {
      // uncomment below and update the code to test the property redBoostCount
      //var instane = new TbaApiV3client.MatchTimeseries2018();
      //expect(instance).to.be();
    });

    it('should have the property redBoostPlayed (base name: "red_boost_played")', function() {
      // uncomment below and update the code to test the property redBoostPlayed
      //var instane = new TbaApiV3client.MatchTimeseries2018();
      //expect(instance).to.be();
    });

    it('should have the property redCurrentPowerup (base name: "red_current_powerup")', function() {
      // uncomment below and update the code to test the property redCurrentPowerup
      //var instane = new TbaApiV3client.MatchTimeseries2018();
      //expect(instance).to.be();
    });

    it('should have the property redFaceTheBoss (base name: "red_face_the_boss")', function() {
      // uncomment below and update the code to test the property redFaceTheBoss
      //var instane = new TbaApiV3client.MatchTimeseries2018();
      //expect(instance).to.be();
    });

    it('should have the property redForceCount (base name: "red_force_count")', function() {
      // uncomment below and update the code to test the property redForceCount
      //var instane = new TbaApiV3client.MatchTimeseries2018();
      //expect(instance).to.be();
    });

    it('should have the property redForcePlayed (base name: "red_force_played")', function() {
      // uncomment below and update the code to test the property redForcePlayed
      //var instane = new TbaApiV3client.MatchTimeseries2018();
      //expect(instance).to.be();
    });

    it('should have the property redLevitateCount (base name: "red_levitate_count")', function() {
      // uncomment below and update the code to test the property redLevitateCount
      //var instane = new TbaApiV3client.MatchTimeseries2018();
      //expect(instance).to.be();
    });

    it('should have the property redLevitatePlayed (base name: "red_levitate_played")', function() {
      // uncomment below and update the code to test the property redLevitatePlayed
      //var instane = new TbaApiV3client.MatchTimeseries2018();
      //expect(instance).to.be();
    });

    it('should have the property redPowerupTimeRemaining (base name: "red_powerup_time_remaining")', function() {
      // uncomment below and update the code to test the property redPowerupTimeRemaining
      //var instane = new TbaApiV3client.MatchTimeseries2018();
      //expect(instance).to.be();
    });

    it('should have the property redScaleOwned (base name: "red_scale_owned")', function() {
      // uncomment below and update the code to test the property redScaleOwned
      //var instane = new TbaApiV3client.MatchTimeseries2018();
      //expect(instance).to.be();
    });

    it('should have the property redScore (base name: "red_score")', function() {
      // uncomment below and update the code to test the property redScore
      //var instane = new TbaApiV3client.MatchTimeseries2018();
      //expect(instance).to.be();
    });

    it('should have the property redSwitchOwned (base name: "red_switch_owned")', function() {
      // uncomment below and update the code to test the property redSwitchOwned
      //var instane = new TbaApiV3client.MatchTimeseries2018();
      //expect(instance).to.be();
    });

  });

}));
