/**
 * The Blue Alliance API v3
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).    A `User-Agent` header may need to be set to prevent a 403 Unauthorized error.
 *
 * OpenAPI spec version: 3.03.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TbaApiV3client);
  }
}(this, function(expect, TbaApiV3client) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TbaApiV3client.Team();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Team', function() {
    it('should create an instance of Team', function() {
      // uncomment below and update the code to test Team
      //var instane = new TbaApiV3client.Team();
      //expect(instance).to.be.a(TbaApiV3client.Team);
    });

    it('should have the property key (base name: "key")', function() {
      // uncomment below and update the code to test the property key
      //var instane = new TbaApiV3client.Team();
      //expect(instance).to.be();
    });

    it('should have the property teamNumber (base name: "team_number")', function() {
      // uncomment below and update the code to test the property teamNumber
      //var instane = new TbaApiV3client.Team();
      //expect(instance).to.be();
    });

    it('should have the property nickname (base name: "nickname")', function() {
      // uncomment below and update the code to test the property nickname
      //var instane = new TbaApiV3client.Team();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instane = new TbaApiV3client.Team();
      //expect(instance).to.be();
    });

    it('should have the property city (base name: "city")', function() {
      // uncomment below and update the code to test the property city
      //var instane = new TbaApiV3client.Team();
      //expect(instance).to.be();
    });

    it('should have the property stateProv (base name: "state_prov")', function() {
      // uncomment below and update the code to test the property stateProv
      //var instane = new TbaApiV3client.Team();
      //expect(instance).to.be();
    });

    it('should have the property country (base name: "country")', function() {
      // uncomment below and update the code to test the property country
      //var instane = new TbaApiV3client.Team();
      //expect(instance).to.be();
    });

    it('should have the property address (base name: "address")', function() {
      // uncomment below and update the code to test the property address
      //var instane = new TbaApiV3client.Team();
      //expect(instance).to.be();
    });

    it('should have the property postalCode (base name: "postal_code")', function() {
      // uncomment below and update the code to test the property postalCode
      //var instane = new TbaApiV3client.Team();
      //expect(instance).to.be();
    });

    it('should have the property gmapsPlaceId (base name: "gmaps_place_id")', function() {
      // uncomment below and update the code to test the property gmapsPlaceId
      //var instane = new TbaApiV3client.Team();
      //expect(instance).to.be();
    });

    it('should have the property gmapsUrl (base name: "gmaps_url")', function() {
      // uncomment below and update the code to test the property gmapsUrl
      //var instane = new TbaApiV3client.Team();
      //expect(instance).to.be();
    });

    it('should have the property lat (base name: "lat")', function() {
      // uncomment below and update the code to test the property lat
      //var instane = new TbaApiV3client.Team();
      //expect(instance).to.be();
    });

    it('should have the property lng (base name: "lng")', function() {
      // uncomment below and update the code to test the property lng
      //var instane = new TbaApiV3client.Team();
      //expect(instance).to.be();
    });

    it('should have the property locationName (base name: "location_name")', function() {
      // uncomment below and update the code to test the property locationName
      //var instane = new TbaApiV3client.Team();
      //expect(instance).to.be();
    });

    it('should have the property website (base name: "website")', function() {
      // uncomment below and update the code to test the property website
      //var instane = new TbaApiV3client.Team();
      //expect(instance).to.be();
    });

    it('should have the property rookieYear (base name: "rookie_year")', function() {
      // uncomment below and update the code to test the property rookieYear
      //var instane = new TbaApiV3client.Team();
      //expect(instance).to.be();
    });

    it('should have the property motto (base name: "motto")', function() {
      // uncomment below and update the code to test the property motto
      //var instane = new TbaApiV3client.Team();
      //expect(instance).to.be();
    });

    it('should have the property homeChampionship (base name: "home_championship")', function() {
      // uncomment below and update the code to test the property homeChampionship
      //var instane = new TbaApiV3client.Team();
      //expect(instance).to.be();
    });

  });

}));
