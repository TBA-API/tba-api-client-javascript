/**
 * The Blue Alliance API v3
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).    A `User-Agent` header may need to be set to prevent a 403 Unauthorized error.
 *
 * OpenAPI spec version: 3.04.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TbaApiV3client);
  }
}(this, function(expect, TbaApiV3client) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('MatchScoreBreakdown2019Alliance', function() {
    it('should create an instance of MatchScoreBreakdown2019Alliance', function() {
      // uncomment below and update the code to test MatchScoreBreakdown2019Alliance
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be.a(TbaApiV3client.MatchScoreBreakdown2019Alliance);
    });

    it('should have the property adjustPoints (base name: "adjustPoints")', function() {
      // uncomment below and update the code to test the property adjustPoints
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be();
    });

    it('should have the property autoPoints (base name: "autoPoints")', function() {
      // uncomment below and update the code to test the property autoPoints
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be();
    });

    it('should have the property bay1 (base name: "bay1")', function() {
      // uncomment below and update the code to test the property bay1
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be();
    });

    it('should have the property bay2 (base name: "bay2")', function() {
      // uncomment below and update the code to test the property bay2
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be();
    });

    it('should have the property bay3 (base name: "bay3")', function() {
      // uncomment below and update the code to test the property bay3
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be();
    });

    it('should have the property bay4 (base name: "bay4")', function() {
      // uncomment below and update the code to test the property bay4
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be();
    });

    it('should have the property bay5 (base name: "bay5")', function() {
      // uncomment below and update the code to test the property bay5
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be();
    });

    it('should have the property bay6 (base name: "bay6")', function() {
      // uncomment below and update the code to test the property bay6
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be();
    });

    it('should have the property bay7 (base name: "bay7")', function() {
      // uncomment below and update the code to test the property bay7
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be();
    });

    it('should have the property bay8 (base name: "bay8")', function() {
      // uncomment below and update the code to test the property bay8
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be();
    });

    it('should have the property cargoPoints (base name: "cargoPoints")', function() {
      // uncomment below and update the code to test the property cargoPoints
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be();
    });

    it('should have the property completeRocketRankingPoint (base name: "completeRocketRankingPoint")', function() {
      // uncomment below and update the code to test the property completeRocketRankingPoint
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be();
    });

    it('should have the property completedRocketFar (base name: "completedRocketFar")', function() {
      // uncomment below and update the code to test the property completedRocketFar
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be();
    });

    it('should have the property completedRocketNear (base name: "completedRocketNear")', function() {
      // uncomment below and update the code to test the property completedRocketNear
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be();
    });

    it('should have the property endgameRobot1 (base name: "endgameRobot1")', function() {
      // uncomment below and update the code to test the property endgameRobot1
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be();
    });

    it('should have the property endgameRobot2 (base name: "endgameRobot2")', function() {
      // uncomment below and update the code to test the property endgameRobot2
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be();
    });

    it('should have the property endgameRobot3 (base name: "endgameRobot3")', function() {
      // uncomment below and update the code to test the property endgameRobot3
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be();
    });

    it('should have the property foulCount (base name: "foulCount")', function() {
      // uncomment below and update the code to test the property foulCount
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be();
    });

    it('should have the property foulPoints (base name: "foulPoints")', function() {
      // uncomment below and update the code to test the property foulPoints
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be();
    });

    it('should have the property habClimbPoints (base name: "habClimbPoints")', function() {
      // uncomment below and update the code to test the property habClimbPoints
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be();
    });

    it('should have the property habDockingRankingPoint (base name: "habDockingRankingPoint")', function() {
      // uncomment below and update the code to test the property habDockingRankingPoint
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be();
    });

    it('should have the property habLineRobot1 (base name: "habLineRobot1")', function() {
      // uncomment below and update the code to test the property habLineRobot1
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be();
    });

    it('should have the property habLineRobot2 (base name: "habLineRobot2")', function() {
      // uncomment below and update the code to test the property habLineRobot2
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be();
    });

    it('should have the property habLineRobot3 (base name: "habLineRobot3")', function() {
      // uncomment below and update the code to test the property habLineRobot3
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be();
    });

    it('should have the property hatchPanelPoints (base name: "hatchPanelPoints")', function() {
      // uncomment below and update the code to test the property hatchPanelPoints
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be();
    });

    it('should have the property lowLeftRocketFar (base name: "lowLeftRocketFar")', function() {
      // uncomment below and update the code to test the property lowLeftRocketFar
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be();
    });

    it('should have the property lowLeftRocketNear (base name: "lowLeftRocketNear")', function() {
      // uncomment below and update the code to test the property lowLeftRocketNear
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be();
    });

    it('should have the property lowRightRocketFar (base name: "lowRightRocketFar")', function() {
      // uncomment below and update the code to test the property lowRightRocketFar
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be();
    });

    it('should have the property lowRightRocketNear (base name: "lowRightRocketNear")', function() {
      // uncomment below and update the code to test the property lowRightRocketNear
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be();
    });

    it('should have the property midLeftRocketFar (base name: "midLeftRocketFar")', function() {
      // uncomment below and update the code to test the property midLeftRocketFar
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be();
    });

    it('should have the property midLeftRocketNear (base name: "midLeftRocketNear")', function() {
      // uncomment below and update the code to test the property midLeftRocketNear
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be();
    });

    it('should have the property midRightRocketFar (base name: "midRightRocketFar")', function() {
      // uncomment below and update the code to test the property midRightRocketFar
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be();
    });

    it('should have the property midRightRocketNear (base name: "midRightRocketNear")', function() {
      // uncomment below and update the code to test the property midRightRocketNear
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be();
    });

    it('should have the property preMatchBay1 (base name: "preMatchBay1")', function() {
      // uncomment below and update the code to test the property preMatchBay1
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be();
    });

    it('should have the property preMatchBay2 (base name: "preMatchBay2")', function() {
      // uncomment below and update the code to test the property preMatchBay2
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be();
    });

    it('should have the property preMatchBay3 (base name: "preMatchBay3")', function() {
      // uncomment below and update the code to test the property preMatchBay3
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be();
    });

    it('should have the property preMatchBay6 (base name: "preMatchBay6")', function() {
      // uncomment below and update the code to test the property preMatchBay6
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be();
    });

    it('should have the property preMatchBay7 (base name: "preMatchBay7")', function() {
      // uncomment below and update the code to test the property preMatchBay7
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be();
    });

    it('should have the property preMatchBay8 (base name: "preMatchBay8")', function() {
      // uncomment below and update the code to test the property preMatchBay8
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be();
    });

    it('should have the property preMatchLevelRobot1 (base name: "preMatchLevelRobot1")', function() {
      // uncomment below and update the code to test the property preMatchLevelRobot1
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be();
    });

    it('should have the property preMatchLevelRobot2 (base name: "preMatchLevelRobot2")', function() {
      // uncomment below and update the code to test the property preMatchLevelRobot2
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be();
    });

    it('should have the property preMatchLevelRobot3 (base name: "preMatchLevelRobot3")', function() {
      // uncomment below and update the code to test the property preMatchLevelRobot3
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be();
    });

    it('should have the property rp (base name: "rp")', function() {
      // uncomment below and update the code to test the property rp
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be();
    });

    it('should have the property sandStormBonusPoints (base name: "sandStormBonusPoints")', function() {
      // uncomment below and update the code to test the property sandStormBonusPoints
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be();
    });

    it('should have the property techFoulCount (base name: "techFoulCount")', function() {
      // uncomment below and update the code to test the property techFoulCount
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be();
    });

    it('should have the property teleopPoints (base name: "teleopPoints")', function() {
      // uncomment below and update the code to test the property teleopPoints
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be();
    });

    it('should have the property topLeftRocketFar (base name: "topLeftRocketFar")', function() {
      // uncomment below and update the code to test the property topLeftRocketFar
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be();
    });

    it('should have the property topLeftRocketNear (base name: "topLeftRocketNear")', function() {
      // uncomment below and update the code to test the property topLeftRocketNear
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be();
    });

    it('should have the property topRightRocketFar (base name: "topRightRocketFar")', function() {
      // uncomment below and update the code to test the property topRightRocketFar
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be();
    });

    it('should have the property topRightRocketNear (base name: "topRightRocketNear")', function() {
      // uncomment below and update the code to test the property topRightRocketNear
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be();
    });

    it('should have the property totalPoints (base name: "totalPoints")', function() {
      // uncomment below and update the code to test the property totalPoints
      //var instane = new TbaApiV3client.MatchScoreBreakdown2019Alliance();
      //expect(instance).to.be();
    });

  });

}));
