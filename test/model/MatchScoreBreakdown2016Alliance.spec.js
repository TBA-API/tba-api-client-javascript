/**
 * The Blue Alliance API v3
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).    A `User-Agent` header may need to be set to prevent a 403 Unauthorized error.
 *
 * OpenAPI spec version: 3.03.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TbaApiV3client);
  }
}(this, function(expect, TbaApiV3client) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TbaApiV3client.MatchScoreBreakdown2016Alliance();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('MatchScoreBreakdown2016Alliance', function() {
    it('should create an instance of MatchScoreBreakdown2016Alliance', function() {
      // uncomment below and update the code to test MatchScoreBreakdown2016Alliance
      //var instane = new TbaApiV3client.MatchScoreBreakdown2016Alliance();
      //expect(instance).to.be.a(TbaApiV3client.MatchScoreBreakdown2016Alliance);
    });

    it('should have the property autoPoints (base name: "autoPoints")', function() {
      // uncomment below and update the code to test the property autoPoints
      //var instane = new TbaApiV3client.MatchScoreBreakdown2016Alliance();
      //expect(instance).to.be();
    });

    it('should have the property teleopPoints (base name: "teleopPoints")', function() {
      // uncomment below and update the code to test the property teleopPoints
      //var instane = new TbaApiV3client.MatchScoreBreakdown2016Alliance();
      //expect(instance).to.be();
    });

    it('should have the property breachPoints (base name: "breachPoints")', function() {
      // uncomment below and update the code to test the property breachPoints
      //var instane = new TbaApiV3client.MatchScoreBreakdown2016Alliance();
      //expect(instance).to.be();
    });

    it('should have the property foulPoints (base name: "foulPoints")', function() {
      // uncomment below and update the code to test the property foulPoints
      //var instane = new TbaApiV3client.MatchScoreBreakdown2016Alliance();
      //expect(instance).to.be();
    });

    it('should have the property capturePoints (base name: "capturePoints")', function() {
      // uncomment below and update the code to test the property capturePoints
      //var instane = new TbaApiV3client.MatchScoreBreakdown2016Alliance();
      //expect(instance).to.be();
    });

    it('should have the property adjustPoints (base name: "adjustPoints")', function() {
      // uncomment below and update the code to test the property adjustPoints
      //var instane = new TbaApiV3client.MatchScoreBreakdown2016Alliance();
      //expect(instance).to.be();
    });

    it('should have the property totalPoints (base name: "totalPoints")', function() {
      // uncomment below and update the code to test the property totalPoints
      //var instane = new TbaApiV3client.MatchScoreBreakdown2016Alliance();
      //expect(instance).to.be();
    });

    it('should have the property robot1Auto (base name: "robot1Auto")', function() {
      // uncomment below and update the code to test the property robot1Auto
      //var instane = new TbaApiV3client.MatchScoreBreakdown2016Alliance();
      //expect(instance).to.be();
    });

    it('should have the property robot2Auto (base name: "robot2Auto")', function() {
      // uncomment below and update the code to test the property robot2Auto
      //var instane = new TbaApiV3client.MatchScoreBreakdown2016Alliance();
      //expect(instance).to.be();
    });

    it('should have the property robot3Auto (base name: "robot3Auto")', function() {
      // uncomment below and update the code to test the property robot3Auto
      //var instane = new TbaApiV3client.MatchScoreBreakdown2016Alliance();
      //expect(instance).to.be();
    });

    it('should have the property autoReachPoints (base name: "autoReachPoints")', function() {
      // uncomment below and update the code to test the property autoReachPoints
      //var instane = new TbaApiV3client.MatchScoreBreakdown2016Alliance();
      //expect(instance).to.be();
    });

    it('should have the property autoCrossingPoints (base name: "autoCrossingPoints")', function() {
      // uncomment below and update the code to test the property autoCrossingPoints
      //var instane = new TbaApiV3client.MatchScoreBreakdown2016Alliance();
      //expect(instance).to.be();
    });

    it('should have the property autoBouldersLow (base name: "autoBouldersLow")', function() {
      // uncomment below and update the code to test the property autoBouldersLow
      //var instane = new TbaApiV3client.MatchScoreBreakdown2016Alliance();
      //expect(instance).to.be();
    });

    it('should have the property autoBouldersHigh (base name: "autoBouldersHigh")', function() {
      // uncomment below and update the code to test the property autoBouldersHigh
      //var instane = new TbaApiV3client.MatchScoreBreakdown2016Alliance();
      //expect(instance).to.be();
    });

    it('should have the property autoBoulderPoints (base name: "autoBoulderPoints")', function() {
      // uncomment below and update the code to test the property autoBoulderPoints
      //var instane = new TbaApiV3client.MatchScoreBreakdown2016Alliance();
      //expect(instance).to.be();
    });

    it('should have the property teleopCrossingPoints (base name: "teleopCrossingPoints")', function() {
      // uncomment below and update the code to test the property teleopCrossingPoints
      //var instane = new TbaApiV3client.MatchScoreBreakdown2016Alliance();
      //expect(instance).to.be();
    });

    it('should have the property teleopBouldersLow (base name: "teleopBouldersLow")', function() {
      // uncomment below and update the code to test the property teleopBouldersLow
      //var instane = new TbaApiV3client.MatchScoreBreakdown2016Alliance();
      //expect(instance).to.be();
    });

    it('should have the property teleopBouldersHigh (base name: "teleopBouldersHigh")', function() {
      // uncomment below and update the code to test the property teleopBouldersHigh
      //var instane = new TbaApiV3client.MatchScoreBreakdown2016Alliance();
      //expect(instance).to.be();
    });

    it('should have the property teleopBoulderPoints (base name: "teleopBoulderPoints")', function() {
      // uncomment below and update the code to test the property teleopBoulderPoints
      //var instane = new TbaApiV3client.MatchScoreBreakdown2016Alliance();
      //expect(instance).to.be();
    });

    it('should have the property teleopDefensesBreached (base name: "teleopDefensesBreached")', function() {
      // uncomment below and update the code to test the property teleopDefensesBreached
      //var instane = new TbaApiV3client.MatchScoreBreakdown2016Alliance();
      //expect(instance).to.be();
    });

    it('should have the property teleopChallengePoints (base name: "teleopChallengePoints")', function() {
      // uncomment below and update the code to test the property teleopChallengePoints
      //var instane = new TbaApiV3client.MatchScoreBreakdown2016Alliance();
      //expect(instance).to.be();
    });

    it('should have the property teleopScalePoints (base name: "teleopScalePoints")', function() {
      // uncomment below and update the code to test the property teleopScalePoints
      //var instane = new TbaApiV3client.MatchScoreBreakdown2016Alliance();
      //expect(instance).to.be();
    });

    it('should have the property teleopTowerCaptured (base name: "teleopTowerCaptured")', function() {
      // uncomment below and update the code to test the property teleopTowerCaptured
      //var instane = new TbaApiV3client.MatchScoreBreakdown2016Alliance();
      //expect(instance).to.be();
    });

    it('should have the property towerFaceA (base name: "towerFaceA")', function() {
      // uncomment below and update the code to test the property towerFaceA
      //var instane = new TbaApiV3client.MatchScoreBreakdown2016Alliance();
      //expect(instance).to.be();
    });

    it('should have the property towerFaceB (base name: "towerFaceB")', function() {
      // uncomment below and update the code to test the property towerFaceB
      //var instane = new TbaApiV3client.MatchScoreBreakdown2016Alliance();
      //expect(instance).to.be();
    });

    it('should have the property towerFaceC (base name: "towerFaceC")', function() {
      // uncomment below and update the code to test the property towerFaceC
      //var instane = new TbaApiV3client.MatchScoreBreakdown2016Alliance();
      //expect(instance).to.be();
    });

    it('should have the property towerEndStrength (base name: "towerEndStrength")', function() {
      // uncomment below and update the code to test the property towerEndStrength
      //var instane = new TbaApiV3client.MatchScoreBreakdown2016Alliance();
      //expect(instance).to.be();
    });

    it('should have the property techFoulCount (base name: "techFoulCount")', function() {
      // uncomment below and update the code to test the property techFoulCount
      //var instane = new TbaApiV3client.MatchScoreBreakdown2016Alliance();
      //expect(instance).to.be();
    });

    it('should have the property foulCount (base name: "foulCount")', function() {
      // uncomment below and update the code to test the property foulCount
      //var instane = new TbaApiV3client.MatchScoreBreakdown2016Alliance();
      //expect(instance).to.be();
    });

    it('should have the property position2 (base name: "position2")', function() {
      // uncomment below and update the code to test the property position2
      //var instane = new TbaApiV3client.MatchScoreBreakdown2016Alliance();
      //expect(instance).to.be();
    });

    it('should have the property position3 (base name: "position3")', function() {
      // uncomment below and update the code to test the property position3
      //var instane = new TbaApiV3client.MatchScoreBreakdown2016Alliance();
      //expect(instance).to.be();
    });

    it('should have the property position4 (base name: "position4")', function() {
      // uncomment below and update the code to test the property position4
      //var instane = new TbaApiV3client.MatchScoreBreakdown2016Alliance();
      //expect(instance).to.be();
    });

    it('should have the property position5 (base name: "position5")', function() {
      // uncomment below and update the code to test the property position5
      //var instane = new TbaApiV3client.MatchScoreBreakdown2016Alliance();
      //expect(instance).to.be();
    });

    it('should have the property position1crossings (base name: "position1crossings")', function() {
      // uncomment below and update the code to test the property position1crossings
      //var instane = new TbaApiV3client.MatchScoreBreakdown2016Alliance();
      //expect(instance).to.be();
    });

    it('should have the property position2crossings (base name: "position2crossings")', function() {
      // uncomment below and update the code to test the property position2crossings
      //var instane = new TbaApiV3client.MatchScoreBreakdown2016Alliance();
      //expect(instance).to.be();
    });

    it('should have the property position3crossings (base name: "position3crossings")', function() {
      // uncomment below and update the code to test the property position3crossings
      //var instane = new TbaApiV3client.MatchScoreBreakdown2016Alliance();
      //expect(instance).to.be();
    });

    it('should have the property position4crossings (base name: "position4crossings")', function() {
      // uncomment below and update the code to test the property position4crossings
      //var instane = new TbaApiV3client.MatchScoreBreakdown2016Alliance();
      //expect(instance).to.be();
    });

    it('should have the property position5crossings (base name: "position5crossings")', function() {
      // uncomment below and update the code to test the property position5crossings
      //var instane = new TbaApiV3client.MatchScoreBreakdown2016Alliance();
      //expect(instance).to.be();
    });

  });

}));
